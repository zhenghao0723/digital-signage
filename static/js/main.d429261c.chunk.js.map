{"version":3,"sources":["firebase/base.js","screens/authentication/SignIn.js","screens/authentication/SignUp.js","screens/authentication/ForgotPassword.js","screens/Dashboard.js","components/CustomizedStationTable.js","screens/Stations.js","components/CustomizedExpansionPanel.js","components/CustomizedDropzone.js","components/CustomizedTable.js","components/CustomizedFolderData.js","components/CustomizedFolderTable.js","screens/Contents.js","components/CustomizedTemplateTable.js","screens/Templates.js","components/CustomizedAddCampaign.js","components/CustomizedCampaignTable.js","screens/Campaigns.js","screens/Networks.js","screens/Reports.js","screens/Admin.js","screens/Error.js","screens/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLoad","console","log","onVerify","setState","isVerified","onExpire","handleSignIn","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","_this$state","email","password","wrap","_context","prev","next","preventDefault","state","auth","signInWithEmailAndPassword","t0","alert","stop","_x","apply","arguments","handleChange","target","value","passwordhandleChange","captcha","classes","react_default","createElement","style","display","justifyContent","alignItems","height","Paper_default","className","root","elevation","Typography_default","variant","title","noValidate","autoComplete","onSubmit","TextField_default","fullWidth","autoFocus","margin","id","label","type","textField","onChange","marginTop","dist_default","sitekey","Button_default","disabled","marginLeft","component","Link","to","Component","withStyles","theme","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","width","backgroundColor","fontWeight","SignUp","handleSignUp","createUserWithEmailAndPassword","ForgotPassword","redirect","handleForgotPassword","sendPasswordResetEmail","then","react_router","Dashboard","Transition","Slide_default","assign","direction","desc","b","orderBy","EnhancedTableHead","createSortHandler","property","onRequestSort","_this2","_this$props","onSelectAllClick","order","numSelected","rowCount","rows","TableHead_default","TableRow_default","TableCell_default","padding","Checkbox_default","indeterminate","checked","map","row","key","align","numeric","disablePadding","sortDirection","Tooltip_default","disableTouchListener","sortable","disableFocusListener","disableHoverListener","placement","enterDelay","TableSortLabel_default","active","onClick","React","EnhancedTableToolbar","onDeleteAllClick","movefile","onAddCampaignClick","Toolbar_default","classNames","defineProperty","highlight","color","spacer","actions","IconButton_default","aria-label","Delete_default","paddingRight","palette","secondary","main","lighten","light","text","primary","dark","flex","TabContainer","children","dir","EnhancedTable","_this3","selected","selectedId","page","rowsPerPage","openDialog","dialogTitle","folderId","folderName","dialogOption","selectedFileName","dialogFullscreen","handleRequestSort","handleSelectAllClick","data","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","isSelected","bytesToSize","bytes","i","parseInt","Math","floor","round","pow","onEditClick","onDeleteClick","onPreviewClick","handleClose","_handleEditFileNameChange","e","handleSelectionChange","selectedFolder","handleEditFile","database","ref","child","update","name","handleRemoveFile","dataName","remove","handleRemoveAllFile","forEach","items","renderDialog","DialogContent_default","DialogContentText_default","DialogActions_default","handleTabsChange","handleTabsChangeIndex","index","_this4","_this$props2","emptyRows","min","AppBar_default","AppBar","position","Tabs_default","indicatorColor","textColor","Tab_default","disableRipple","Dialog_default","fullScreen","onClose","aria-labelledby","open","maxWidth","TransitionComponent","appBar","Close_default","DialogTitle_default","lib_default","axis","CustomizedStationTable_EnhancedTableToolbar","tableWrapper","Table_default","table","CustomizedStationTable_EnhancedTableHead","TableBody_default","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","action","actionButtons","total","Visibility_default","fontSize","Edit_default","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","template_name","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","minWidth","overflowX","boxShadow","borderBottom","withTheme","Templates","stationData","on","snapshot","childSnapshot","item","val","push","created","CustomizedStationTable","ExpansionPanel","border","&:not(:last-child)","&:before","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","&$expanded","content","ExpansionPanelSummary_default","muiName","ExpansionPanelDetails","MuiExpansionPanelDetails","CustomizedExpansionPanel","panel","CustomizedExpansionPanel_ExpansionPanel","square","CustomizedExpansionPanel_ExpansionPanelSummary","CustomizedExpansionPanel_ExpansionPanelDetails","Container","styled","div","_templateObject","getColor","isDragAccept","isDragReject","isDragActive","thumb","borderRadius","marginRight","boxSizing","thumbInner","overflow","CustomizedDropzone","isUploading","uploadProgress","filenames","downloadURLs","files","handleUploadStart","handleUploadProgress","progress","handleUploadError","error","handleUploadSuccess","filename","downloadURL","storage","getDownloadURL","sent","getMetadata","metadata","postData","imageUrl","size","ServerValue","TIMESTAMP","contentType","fullPath","folder","updates","catch","oldState","toConsumableArray","customOnChangeHandler","filesToStore","Array","from","file","startUploadManually","fileUploader","startUpload","onClearFileList","onDrop","react_firebase_file_uploader_lib_default","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","multiple","hidden","es","minSize","maxSize","_ref2","getRootProps","getInputProps","rejectedFiles","flexDirection","flexWrap","index_es","alt","src","URL","createObjectURL","folderSelection","select","onMoveAllClick","onAddMediaClick","currentFolder","handleFolderChange","folderCollection","FormControl_default","InputLabel_default","htmlFor","Select_default","input","OutlinedInput_default","labelWidth","MenuItem_default","dialogUrl","dialogType","url","transaction","once","delete","handleMoveAllFile","autoPlay","InputLabelRef","_this5","CustomizedTable_EnhancedTableToolbar","CustomizedTable_EnhancedTableHead","thumbnail","preview","CustomizedFolderData_EnhancedTableToolbar","CustomizedFolderData_EnhancedTableHead","onAddFolderClick","mediaData","addFolderName","onFolderClick","_handleFolderNameChange","handleAddFolder","newPostKey","CustomizedFolderData","CustomizedFolderTable_EnhancedTableToolbar","CustomizedFolderTable_EnhancedTableHead","Folder_default","Contents","CustomizedTable","CustomizedFolderTable","components_CustomizedDropzone","components_CustomizedExpansionPanel","renderMediaContent","renderFoldersContent","CustomizedTemplateTable_TabContainer","CustomizedTemplateTable_EnhancedTableToolbar","CustomizedTemplateTable_EnhancedTableHead","templateData","container","CustomizedTemplateTable","windowHeight","window","innerHeight","SortableItem","sortableElement","handleToggle","mediaCollection","ListItem_default","divider","dense","button","Avatar_default","ListItemText_default","SortableContainer","sortableContainer","List_default","CustomizedAddCampaign","selectedTemplate","templateCollection","contents","allContainer","currentContainer","campaignName","handleTemplateChange","currentIndex","newChecked","splice","onSortEnd","_ref3","itemsArray","oldIndex","newIndex","finalItemsArray","arrayMove","onSortStart","_ref4","node","collection","isKeySorting","num","renderSortableItem","renderSortable","lockAxis","Divider_default","renderTemplate","mediaIndex","Grid_default","react_image_autofit_frame_default","imgSize","frameWidth","frameHeight","imgSrc","mediaindex","handleCampaignNameChange","handleSaveCampaign","template","xs","justify","CustomizedCampaignTable_TabContainer","CustomizedCampaignTable_EnhancedTableToolbar","CustomizedCampaignTable_EnhancedTableHead","components_CustomizedAddCampaign","Campaigns","campaignData","CustomizedCampaignTable","Networks","Reports","paper","searchBar","searchInput","typography","block","addUser","contentWrapper","Search_default","placeholder","InputProps","disableUnderline","Refresh_default","Error","Navigation","appBarTitle","handleDrawerOpen","handleDrawerClose","navigateScreen","signOut","icons","secondaryIcons","CssBaseline_default","appBarShift","disableGutters","menuButton","hide","Menu_default","noWrap","Drawer_default","drawer","anchor","drawerPaper","drawerHeader","ChevronLeft_default","ChevronRight_default","toLowerCase","ListItemIcon_default","contentShift","components","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","flexShrink","toolbar","flexGrow","App","loading","authenticated","user","onAuthStateChanged","currentUser","path","exact","Stations","Admin","CircularProgress_default","react_router_dom","screens_Navigation","renderRoute","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d429261c.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCT4IE0kDuDZ3X9bHsvvU--xUO-hG93zU0\",\r\n    authDomain: \"pgkmedia-607c5.firebaseapp.com\",\r\n    databaseURL: \"https://pgkmedia-607c5.firebaseio.com\",\r\n    projectId: \"pgkmedia-607c5\",\r\n    storageBucket: \"pgkmedia-607c5.appspot.com\",\r\n    messagingSenderId: \"518306198801\"\r\n});\r\n\r\nexport default app;","import React, { Component } from \"react\";\r\nimport app from \"../../firebase/base\";\r\nimport Reaptcha from 'reaptcha';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 300,\r\n    backgroundColor: '#F4F4F4'\r\n  },\r\n  textField: {\r\n    marginTop: 10\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nclass SignIn extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.captcha = null;\r\n    this.state = {\r\n      isVerified: false,\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  onLoad = () => {\r\n    console.log('capcha successfully loaded');\r\n  };\r\n\r\n  onVerify = () => {\r\n    // Do something\r\n    this.setState({\r\n      isVerified: true\r\n    });\r\n  };\r\n\r\n  onExpire = () => {\r\n    // Do something\r\n    this.setState({\r\n      isVerified: false\r\n    });\r\n  };\r\n  \r\n\r\n  handleSignIn = async event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.isVerified) {\r\n      const { email, password } = this.state;\r\n      try {\r\n        await app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email, password);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    } else {\r\n      alert('Please verify that you are a human!');\r\n    }\r\n    \r\n    \r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordhandleChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'  }}>\r\n        <Paper className={classes.root} elevation={1} >\r\n          <Typography variant=\"h5\" className={classes.title} >Login</Typography>\r\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSignIn}>\r\n            <TextField\r\n              fullWidth\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"standard-name\"\r\n              label=\"Username\"\r\n              type=\"email\"\r\n              className={classes.textField}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              id=\"standard-password-input\"\r\n              label=\"Password\"\r\n              className={classes.textField}\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.passwordhandleChange}\r\n              autoComplete=\"current-password\"\r\n              margin=\"dense\"\r\n            />\r\n\r\n            <div style={{ marginTop: 20 }} >\r\n              <Reaptcha sitekey=\"6Ld1gZ8UAAAAAAav2MZF1t6n77Lw4oDj3HqQYQuh\" onVerify={this.onVerify} onExpire={this.onExpire}/>\r\n            </div>\r\n            <div style={{ marginTop: 20 }} >\r\n              <Button variant=\"outlined\" type=\"submit\" disabled={!this.state.isVerified}>Log in</Button>\r\n              <Button style={{ marginLeft: 10 }} variant=\"outlined\" type=\"submit\" component={Link} to={'/digital-signage/register'}>Register</Button>\r\n            </div>\r\n\r\n            <Typography style={{ marginTop: 20 }} variant=\"caption\" className={classes.title} component={Link} to={'/digital-signage/forgotpassword'} >Forgot Password</Typography>\r\n            \r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignIn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport app from \"../../firebase/base\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 300,\r\n    backgroundColor: '#F4F4F4'\r\n  },\r\n  textField: {\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nclass SignUp extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleSignUp = async event => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    try {\r\n      await app.auth().createUserWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordhandleChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'  }}>\r\n        <Paper className={classes.root} elevation={1} >\r\n          <Typography variant=\"h5\" >Sign Up</Typography>\r\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSignUp}>\r\n            <TextField\r\n              fullWidth\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"standard-name\"\r\n              label=\"Username\"\r\n              className={classes.textField}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              type=\"email\"\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              id=\"standard-password-input\"\r\n              label=\"Password\"\r\n              className={classes.textField}\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.passwordhandleChange}\r\n              autoComplete=\"current-password\"\r\n              margin=\"dense\"\r\n            />\r\n\r\n            <Button style={{ marginTop: 20 }} variant=\"outlined\" type=\"submit\" >Sign Up</Button>\r\n            <Typography style={{ marginTop: 20 }} variant=\"caption\" className={classes.title} component={Link} to={'/digital-signage'} >Back to Login Page</Typography>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignUp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport app from \"../../firebase/base\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      paddingTop: theme.spacing.unit * 2,\r\n      paddingBottom: theme.spacing.unit * 2,\r\n      width: 300,\r\n      backgroundColor: '#F4F4F4'\r\n    },\r\n    textField: {\r\n      marginTop: 10\r\n    },\r\n    title: {\r\n      fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nclass ForgotPassword extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        redirect: false\r\n    }\r\n\r\n    handleForgotPassword = async event => {\r\n        event.preventDefault();\r\n\r\n        const { email } = this.state;\r\n        \r\n        try {\r\n            await app.auth().sendPasswordResetEmail(email).then(()=>{\r\n                this.setState({ redirect: true })\r\n            })\r\n            \r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ email: event.target.value });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        const { redirect } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Redirect to='/digital-signage'/>;\r\n        }\r\n\r\n        return (\r\n            <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'  }}>\r\n                <Paper className={classes.root} elevation={1} >\r\n                    <Typography variant=\"h5\" className={classes.title} >Forgot Password</Typography>\r\n                    <form onSubmit={this.handleForgotPassword}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"standard-name\"\r\n                            label=\"Email Address\"\r\n                            type=\"email\"\r\n                            className={classes.textField}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button style={{ marginTop:20 }} variant=\"outlined\" type=\"submit\" disabled={this.state.email === ''? true : false}>Send</Button>\r\n                        <Typography style={{ marginTop: 20 }} variant=\"caption\" className={classes.title} component={Link} to={'/digital-signage'} >Back to Login Page</Typography>\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(ForgotPassword);\r\n","import React, { Component } from 'react';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Dashboard</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Dashboard;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PreviewIcon from '@material-ui/icons/Visibility';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from \"firebase\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes, onDeleteAllClick, movefile, onAddCampaignClick } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            \r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  AppBar: {\r\n    boxShadow: 'none',\r\n    borderBottom: '1px solid #e8e8e8',\r\n  }\r\n});\r\n\r\nfunction TabContainer({ children, dir }) {\r\n  return (\r\n    <div dir={dir}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired,\r\n};\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    folderId: '',\r\n    folderName: '',\r\n    dialogOption: '',\r\n    selectedFileName: '',\r\n    dialogFullscreen: false,\r\n    value: 0\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.props.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onAddCampaignClick = () => {\r\n    \r\n  }\r\n\r\n  onEditClick = (id) => {\r\n    \r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove Campaign\",\r\n        selectedId: id,\r\n        dialogOption: 'delete',\r\n        dialogFullscreen: false\r\n    });\r\n  }\r\n\r\n  onPreviewClick = (id) => {\r\n\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove Campaign\",\r\n        dialogFullscreen: false\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media_folder/' + this.state.selectedId).update({ name: this.state.selectedFileName });\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove()\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selectedId: '',\r\n      selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n\r\n    this.state.selected.forEach(items => {\r\n        firebase.database().ref(this.props.dataName).child(items).remove()\r\n    })\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selected: []\r\n    });\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these campaign?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these campaign?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    } \r\n\r\n  }\r\n\r\n  handleTabsChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleTabsChangeIndex = index => {\r\n    this.setState({ value: index });\r\n  };\r\n  \r\n  render() {\r\n    const { classes, rows, data, theme } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar className={classes.AppBar} position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={this.state.value}\r\n            onChange={this.handleTabsChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab disableRipple label=\"Station List\" />\r\n            <Tab disableRipple label=\"Create Station\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <Dialog\r\n            fullScreen={this.state.dialogFullscreen}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n            maxWidth='xl'\r\n            TransitionComponent={Transition}\r\n          >\r\n          {this.state.dialogFullscreen ? \r\n            <AppBar className={classes.appBar}>\r\n              <Toolbar>\r\n                <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                  {this.state.dialogTitle}\r\n                </Typography>\r\n                <Button color=\"inherit\" onClick={this.handleClose}>\r\n                  save\r\n                </Button>\r\n              </Toolbar> \r\n            </AppBar>: \r\n            <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n              {this.state.dialogTitle}\r\n            </DialogTitle> \r\n          }\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={this.state.value}\r\n          //onChangeIndex={this.handleTabsChangeIndex}\r\n        >\r\n          <TabContainer dir={theme.direction}>\r\n            <EnhancedTableToolbar numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} movefile={this.props.movefile} onAddCampaignClick={this.onAddCampaignClick}/>\r\n            <div className={classes.tableWrapper}>\r\n              <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n                <EnhancedTableHead\r\n                  numSelected={selected.length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={this.handleSelectAllClick}\r\n                  onRequestSort={this.handleRequestSort}\r\n                  rowCount={data.length}\r\n                  rows={rows}\r\n                />\r\n                <TableBody>\r\n                  {stableSort(data, getSorting(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map(n => {\r\n                      const isSelected = this.isSelected(n.id);\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          aria-checked={isSelected}\r\n                          tabIndex={-1}\r\n                          key={n.id}\r\n                          selected={isSelected}\r\n                        >\r\n                          <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                            <Checkbox checked={isSelected} />\r\n                          </TableCell>\r\n\r\n                          {rows.map(value => {\r\n\r\n                              if(value.action)\r\n                              {\r\n                                return(\r\n                                  <TableCell key={value.id} align=\"left\" padding=\"none\" >\r\n                                      <div className={classes.actionButtons}>\r\n                                          <IconButton color={n.total > 0 ? \"primary\" : \"default\"} disabled={n.total > 0 ? false : true} onClick={() => this.onPreviewClick(n.id) }>\r\n                                              <PreviewIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                          <IconButton onClick={() => this.onEditClick(n.id) }>\r\n                                              <EditIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                          <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                              <DeleteIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                      </div>\r\n                                  </TableCell>\r\n                                )\r\n                                \r\n                              }\r\n\r\n                              else if(value.id === 'created')\r\n                              {\r\n                                return(\r\n                                    <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                                  )\r\n                              }\r\n\r\n                              else if(value.id === 'template')\r\n                              {\r\n                                return(\r\n                                    <TableCell  key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n.template_name}</TableCell>\r\n                                  )\r\n                              }\r\n                              \r\n                              else {\r\n                                return(\r\n                                    <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                                  )\r\n                              }\r\n                              \r\n                          })}\r\n                        \r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 49 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={data.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                'aria-label': 'Previous Page',\r\n              }}\r\n              nextIconButtonProps={{\r\n                'aria-label': 'Next Page',\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n            />\r\n          </TabContainer>\r\n          <TabContainer dir={theme.direction}>\r\n              \r\n          </TabContainer>\r\n        </SwipeableViews>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EnhancedTable);","import React, { Component } from 'react';\r\nimport CustomizedStationTable from '../components/CustomizedStationTable';\r\nimport firebase from \"firebase\";\r\n\r\nclass Templates extends Component {\r\n\r\n    state = {\r\n      stationData: []\r\n    }\r\n\r\n    componentWillMount(){\r\n      let ref = firebase.database().ref('station');\r\n\r\n      ref.on('value', snapshot => {\r\n        const stationData = [];\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n          const item = childSnapshot.val();\r\n          item.key = childSnapshot.key;\r\n\r\n          stationData.push({ id:item.key, name: item.name, created: item.created });\r\n          \r\n        });\r\n\r\n        this.setState({ stationData });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <div>\r\n           <CustomizedStationTable \r\n              rows={[\r\n                { id: 'name', numeric: false, disablePadding: false, label: 'Station Name', sortable: true },\r\n                { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n                { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n              ]} \r\n              data={this.state.stationData}\r\n              orderBy={'created'}\r\n              movefile={false}\r\n              dataName='station'/>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Templates;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ExpansionPanel = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0,0,0,.125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  expanded: {\r\n    margin: 'auto',\r\n  },\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0,0,0,.03)',\r\n    borderBottom: '1px solid rgba(0,0,0,.125)',\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(props => <MuiExpansionPanelSummary {...props} />);\r\n\r\nExpansionPanelSummary.muiName = 'ExpansionPanelSummary';\r\n\r\nconst ExpansionPanelDetails = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nclass CustomizedExpansionPanel extends React.Component {\r\n  state = {\r\n    expanded: 'panel0',\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { expanded } = this.state;\r\n    return (\r\n      <div>\r\n        {this.props.panel.map((panel, index) => {\r\n          return (\r\n            <ExpansionPanel\r\n              key={index}\r\n              square\r\n              expanded={expanded === 'panel' + index}\r\n              onChange={this.handleChange('panel' + index)}\r\n            >\r\n              <ExpansionPanelSummary>\r\n                <Typography>{panel.name}</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails style={{ padding: 0 }}>\r\n                {panel.content}\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          )\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizedExpansionPanel;","import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport firebase from \"firebase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { MovieRounded } from '@material-ui/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: #bdbdbd;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n`;\r\n\r\nconst getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#eeeeee';\r\n}\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box',\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden',\r\n  alignItems: 'center'\r\n};\r\n\r\nclass CustomizedDropzone extends Component {\r\n\r\n    state = {\r\n        isUploading: false,\r\n        uploadProgress: 0,\r\n        filenames: [],\r\n        downloadURLs: [],\r\n        files:[]\r\n    };\r\n    \r\n    handleUploadStart = () =>{\r\n        this.setState({\r\n            isUploading: true,\r\n            uploadProgress: 0,\r\n        })\r\n    };\r\n\r\n    handleUploadProgress = progress => {\r\n        this.setState({\r\n            uploadProgress: progress\r\n        })\r\n    }\r\n\r\n    handleUploadError = error => {\r\n        this.setState({\r\n            isUploading: false\r\n            // Todo: handle error\r\n        });\r\n        alert(error);\r\n    };\r\n\r\n    handleUploadSuccess = async filename => {\r\n        const downloadURL = await firebase\r\n            .storage()\r\n            .ref(\"media\")\r\n            .child(filename)\r\n            .getDownloadURL();\r\n\r\n        const file = await firebase\r\n            .storage()\r\n            .ref(\"media\")\r\n            .child(filename)\r\n\r\n        // Get metadata properties\r\n        file.getMetadata().then(function(metadata) {\r\n\r\n            var postData = {\r\n            name: metadata.name,\r\n            imageUrl: downloadURL,\r\n            size: metadata.size,\r\n            created: firebase.database.ServerValue.TIMESTAMP,\r\n            type: metadata.contentType,\r\n            fullPath: metadata.fullPath,\r\n            folder: 'default'\r\n            };\r\n\r\n            // Get a key for a new Post.\r\n            var newPostKey = firebase.database().ref().child('media').push().key;\r\n        \r\n            // Write the new post's data simultaneously in the posts list and the user's post list.\r\n            var updates = {};\r\n            updates['/media/' + newPostKey] = postData;\r\n        \r\n            firebase.database().ref().update(updates);\r\n\r\n        }).catch(function(error) {\r\n            // Uh-oh, an error occurred!\r\n        });\r\n\r\n        this.setState(oldState => ({\r\n            filenames: [...oldState.filenames, filename],\r\n            downloadURLs: [...oldState.downloadURLs, downloadURL],\r\n            uploadProgress: 100,\r\n            isUploading: false,\r\n            files:[]\r\n        }));\r\n\r\n    };\r\n\r\n    customOnChangeHandler = (event) => {\r\n        const { target: { files } } = event;\r\n        const filesToStore = [];\r\n        Array.from(files).forEach(file => filesToStore.push(file));\r\n        this.setState({ files: filesToStore })\r\n    }\r\n\r\n    startUploadManually = () => {\r\n        this.setState({ isUploading: true })\r\n        const { files } = this.state;\r\n        Array.from(files).forEach(file => {\r\n            this.fileUploader.startUpload(file)\r\n        });\r\n    }\r\n\r\n    onClearFileList = () => {\r\n        this.setState({files: []})\r\n    }\r\n\r\n    onDrop = (files) => {\r\n        this.setState({files})\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <div style={{ marginBottom: 20 }}>\r\n            <FileUploader\r\n                accept=\"image/png, image/jpeg, video/mp4\"\r\n                name=\"image-uploader-multiple\"\r\n                randomizeFilename\r\n                storageRef={firebase.storage().ref(\"media\")}\r\n                onUploadStart={this.handleUploadStart}\r\n                onUploadError={this.handleUploadError}\r\n                onUploadSuccess={this.handleUploadSuccess}\r\n                onProgress={this.handleUploadProgress}\r\n                onChange={this.customOnChangeHandler} // ⇐ Call your handler\r\n                ref={fileUploader => { this.fileUploader = fileUploader; } }  // ⇐ reference the component\r\n                multiple\r\n                hidden \r\n            />\r\n            <Dropzone disabled={this.state.isUploading} multiple onDrop={this.onDrop} accept=\"image/png, image/jpeg, video/mp4\" minSize={0} maxSize={20428800}>\r\n                {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, rejectedFiles}) => (\r\n                <div>\r\n                    <Container {...getRootProps({isDragActive, isDragAccept, isDragReject, rejectedFiles})}>\r\n                    <input {...getInputProps()} />\r\n                    {isDragActive ? \"Drop the files here\" : 'Drag and drop some files here, or click to select files'}\r\n                    </Container>\r\n                    <aside style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap',marginTop: 16 }}>\r\n                    {this.state.files.map(file => { \r\n                        if(file.type === 'video/mp4'){\r\n                        return(\r\n                        <div style={thumb} key={file.name}>\r\n                            <div style={thumbInner}>\r\n                            <MovieRounded style={{ fontSize: 50, color: \"#b4b4b4\" }}/>\r\n                            </div>\r\n                        </div>)\r\n                        } else {\r\n                        return(\r\n                        <div style={thumb} key={file.name}>\r\n                            <div style={thumbInner}>\r\n                            <img alt={file.name}\r\n                                src={URL.createObjectURL(file)}\r\n                                style={{ display: 'block', width: 'auto', height: '100%' }}\r\n                            />\r\n                            </div>\r\n                        </div>)\r\n                        }\r\n                    })}\r\n                    </aside>\r\n                    <div style={{ display: 'inline-flex' }}>\r\n                    <Button onClick={this.startUploadManually} disabled={(this.state.files.length > 0 && !this.state.isUploading)? false : true } variant=\"outlined\" color=\"primary\">\r\n                        Upload\r\n                    </Button>\r\n                    <Button onClick={this.onClearFileList} disabled={(this.state.files.length > 0 && !this.state.isUploading)? false : true } variant=\"outlined\" color=\"primary\" style={{ marginLeft:8 }}>\r\n                        Clear\r\n                    </Button>\r\n                    {rejectedFiles.length > 0 && (<div style={{ marginTop: 8, color:'#fa3b56', fontSize: 12, marginLeft: 8, alignItems: 'bottom' }}>{rejectedFiles.length} files has been rejected.</div>)}\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </Dropzone>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default CustomizedDropzone;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PreviewIcon from '@material-ui/icons/Visibility';\r\nimport { MovieRounded, SubdirectoryArrowLeft } from '@material-ui/icons'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport firebase from \"firebase\";\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { folderSelection, select, numSelected, classes, onMoveAllClick, onDeleteAllClick, movefile, onAddMediaClick, currentFolder, handleFolderChange, folderCollection} = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : ( folderSelection ?\r\n          <FormControl fullWidth variant=\"outlined\" >\r\n              <InputLabel\r\n                  htmlFor=\"outlined-age-simple\"\r\n              >\r\n                  Folder\r\n              </InputLabel>\r\n              <Select\r\n                  value={currentFolder}\r\n                  onChange={handleFolderChange}\r\n                  input={\r\n                  <OutlinedInput\r\n                      labelWidth={100}\r\n                      name=\"folder\"\r\n                      id=\"outlined-age-simple\"\r\n                  />\r\n                  }\r\n              >\r\n                  \r\n                  <MenuItem value=\"default\">\r\n                  <em>Default</em>\r\n                  </MenuItem>\r\n                  {folderCollection.map(n => {\r\n                  return(\r\n                      <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                  )\r\n                  })}\r\n\r\n              </Select>\r\n          </FormControl> : <div></div>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            { select ? \r\n            <Tooltip title=\"select\">\r\n                <Button onClick={onAddMediaClick} color=\"primary\">\r\n                Select\r\n                </Button>\r\n            </Tooltip> : <div></div>}\r\n            <Tooltip title=\"Move\">\r\n                <IconButton aria-label=\"Move\" onClick={onMoveAllClick}>\r\n                <SubdirectoryArrowLeft />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    dialogUrl: null,\r\n    dialogType: null,\r\n    dialogOption: '',\r\n    selectedFileName: '',\r\n    selectedFolder: 'default',\r\n    data: [],\r\n    currentFolder: 'default',\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.state.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onPreviewClick = (type, name, url) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: name,\r\n        dialogUrl: url,\r\n        dialogType: type,\r\n        dialogOption: 'preview'\r\n    });\r\n  }\r\n\r\n  onEditClick = (id, name) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Edit file\",\r\n        selectedId: id,\r\n        dialogOption: 'edit',\r\n        selectedFileName: name,\r\n        selectedFolder: 'default'\r\n    });\r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove file\",\r\n        selectedId: id,\r\n        dialogOption: 'delete'\r\n    });\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove file\",\r\n    });\r\n  }\r\n\r\n  onMoveAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'moveAll',\r\n        dialogTitle: \"Move file\",\r\n        selectedFolder: 'default'\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media/' + this.state.selectedId).update({ name: this.state.selectedFileName, folder: this.state.selectedFolder });\r\n\r\n    if(this.state.selectedFolder !== 'default'){\r\n        firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n        \r\n        return total + 1;\r\n        })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).once('value', snapshot => {\r\n      const item = snapshot.val();\r\n\r\n      firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove().then(() => {\r\n        \r\n        firebase.storage().ref().child(item.fullPath).delete()\r\n\r\n      })\r\n    })\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedId: '',\r\n        selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n    this.state.selected.forEach(items => {\r\n        firebase.database().ref(this.props.dataName).child(items).once('value', snapshot => {\r\n        const item = snapshot.val();\r\n\r\n        firebase.database().ref(this.props.dataName).child(items).remove().then(() => {\r\n            \r\n            firebase.storage().ref().child(item.fullPath).delete()\r\n\r\n        })\r\n        })\r\n    })\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleMoveAllFile = () => {\r\n    \r\n    if(this.state.selectedFolder !== 'default'){\r\n      this.state.selected.forEach(items => {\r\n        firebase.database().ref().child('/media/' + items).update({ folder: this.state.selectedFolder });\r\n  \r\n        firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n          \r\n          return total + 1;\r\n        })\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selected: []\r\n    });\r\n\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'preview'){\r\n        return(\r\n            <DialogContent>\r\n                { this.state.dialogType === 'video/mp4' ? <video style={{ width: '100%'}}  autoPlay src={this.state.dialogUrl} type=\"video/mp4\"></video> : <img alt='' style={{ width: '100%'}} src={this.state.dialogUrl} /> }\r\n            </DialogContent>\r\n        )\r\n    } \r\n\r\n    else if(this.state.dialogOption === 'edit'){\r\n        return(\r\n            <div>\r\n            <DialogContent>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"File Name\"\r\n                    fullWidth\r\n                    value={this.state.selectedFileName} \r\n                    onChange={this._handleEditFileNameChange}\r\n                />\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\" >\r\n                    <InputLabel\r\n                        ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                        }}\r\n                        htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                        Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={this.state.selectedFolder}\r\n                        onChange={this.handleSelectionChange}\r\n                        input={\r\n                        <OutlinedInput\r\n                            labelWidth={100}\r\n                            name=\"folder\"\r\n                            id=\"outlined-age-simple\"\r\n                        />\r\n                        }\r\n                    >\r\n                        \r\n                        <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                        </MenuItem>\r\n                        {this.props.folderCollection.map(n => {\r\n                            return(\r\n                                <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                            )\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleEditFile} color=\"primary\">\r\n                Submit\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"default\">\r\n                Cancel\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these file?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these file?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'moveAll'){\r\n        return(\r\n            <div>\r\n            <DialogContent style={{ width: 200}}>\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\">\r\n                    <InputLabel\r\n                    ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                    }}\r\n                    htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                    Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                    value={this.state.selectedFolder}\r\n                    onChange={this.handleSelectionChange}\r\n                    input={\r\n                        <OutlinedInput\r\n                        labelWidth={100}\r\n                        name=\"folder\"\r\n                        id=\"outlined-age-simple\"\r\n                        />\r\n                    }\r\n                    >\r\n                    \r\n                    <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                    </MenuItem>\r\n                    {this.props.folderCollection.map(n => {\r\n                        return(\r\n                        <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                        )\r\n                    })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleMoveAllFile} color=\"primary\">\r\n                Yes\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                No\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n      \r\n  }\r\n\r\n  handleFolderChange = event => {\r\n\r\n    let ref = firebase.database().ref('media');\r\n\r\n    ref.on('value', snapshot => {\r\n        const data = [];\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n          const item = childSnapshot.val();\r\n          item.key = childSnapshot.key;\r\n          \r\n          if(item.folder === event.target.value)\r\n          {\r\n            data.push({id:item.key, name: item.name, imageUrl: item.imageUrl, created: item.created, type: item.type, size: item.size, folder: item.folder });\r\n          }\r\n          \r\n        });\r\n\r\n        this.setState({ data, currentFolder: event.target.value });\r\n    });\r\n\r\n  };  \r\n\r\n  componentWillMount(){\r\n    let ref = firebase.database().ref('media');\r\n\r\n    ref.on('value', snapshot => {\r\n        const data = [];\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n          const item = childSnapshot.val();\r\n          item.key = childSnapshot.key;\r\n          \r\n          if(item.folder === this.state.currentFolder)\r\n          {\r\n            data.push({id:item.key, name: item.name, imageUrl: item.imageUrl, created: item.created, type: item.type, size: item.size, folder: item.folder });\r\n          }\r\n          \r\n        });\r\n\r\n        this.setState({ data });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes, rows } = this.props;\r\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n          >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            {this.state.dialogTitle}\r\n          </DialogTitle>\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <EnhancedTableToolbar folderSelection={this.props.folderSelection} numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} onMoveAllClick={this.onMoveAllClick} movefile={this.props.movefile} select={this.props.select} onAddMediaClick={()=> this.props.onAddMediaClick(this.state.selected)} currentFolder={this.state.currentFolder} handleFolderChange={this.handleFolderChange} folderCollection={this.props.folderCollection}/>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n              rows={rows}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n\r\n                      {rows.map(value => {\r\n\r\n                          if(value.thumbnail){\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">\r\n                                    {(n.type === 'video/mp4') ? <div style={{ height: 50}} ><MovieRounded style={{ fontSize: 50, color: \"#b4b4b4\" }}/></div> : <img style={{ height: 50}} src={n.imageUrl} alt=\"\"/>}\r\n                                </TableCell>\r\n                            )\r\n                          } \r\n                          \r\n                          else if(value.action)\r\n                          {\r\n                              if(this.props.preview)\r\n                              {\r\n                                return(\r\n                                    <TableCell key={value.id} align=\"left\" padding=\"none\" >\r\n                                        <div className={classes.actionButtons}>\r\n                                            <IconButton color=\"primary\" onClick={() => this.onPreviewClick(n.type, n.name, n.imageUrl) }>\r\n                                                <PreviewIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                                <EditIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                                <DeleteIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                )\r\n                              } else {\r\n                                return(\r\n                                    <TableCell key={value.id} align=\"left\" padding=\"none\" >\r\n                                        <div className={classes.actionButtons}>\r\n                                            <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                                <EditIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                                <DeleteIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                )\r\n                              }\r\n                            \r\n                          }\r\n\r\n                          else if(value.id === 'size')\r\n                          {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{this.bytesToSize(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n\r\n                          else if(value.id === 'created')\r\n                          {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                          else {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                      })}\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PreviewIcon from '@material-ui/icons/Visibility';\r\nimport { MovieRounded, SubdirectoryArrowLeft } from '@material-ui/icons'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport firebase from \"firebase\";\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes, onMoveAllClick, onDeleteAllClick, movefile } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            \r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Tooltip title=\"Move\">\r\n                <IconButton aria-label=\"Move\" onClick={onMoveAllClick}>\r\n                <SubdirectoryArrowLeft />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    dialogUrl: null,\r\n    dialogType: null,\r\n    dialogOption: '',\r\n    selectedFileName: '',\r\n    selectedFolder: this.props.selectedFolder\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.props.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onPreviewClick = (type, name, url) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: name,\r\n        dialogUrl: url,\r\n        dialogType: type,\r\n        dialogOption: 'preview'\r\n    });\r\n  }\r\n\r\n  onEditClick = (id, name) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Edit file\",\r\n        selectedId: id,\r\n        dialogOption: 'edit',\r\n        selectedFileName: name,\r\n        selectedFolder: this.props.selectedFolder\r\n    });\r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove file\",\r\n        selectedId: id,\r\n        dialogOption: 'delete'\r\n    });\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove file\",\r\n    });\r\n  }\r\n\r\n  onMoveAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'moveAll',\r\n        dialogTitle: \"Move file\",\r\n        selectedFolder: this.props.selectedFolder\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media/' + this.state.selectedId).update({ name: this.state.selectedFileName, folder: this.state.selectedFolder });\r\n\r\n    if(this.state.selectedFolder !== this.props.selectedFolder){\r\n\r\n      if(this.state.selectedFolder !== 'default'){\r\n          firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n          \r\n          return total + 1;\r\n          })\r\n      }\r\n\r\n      firebase.database().ref().child('/media_folder/' + this.props.selectedFolder).child('total').transaction( total => {\r\n        \r\n          return total - 1;\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: this.props.selectedFolder,\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).once('value', snapshot => {\r\n      const item = snapshot.val();\r\n\r\n      firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove().then(() => {\r\n        \r\n        firebase.storage().ref().child(item.fullPath).delete()\r\n\r\n      })\r\n    })\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedId: '',\r\n        selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n    this.state.selected.forEach(items => {\r\n        firebase.database().ref(this.props.dataName).child(items).once('value', snapshot => {\r\n        const item = snapshot.val();\r\n\r\n        firebase.database().ref(this.props.dataName).child(items).remove().then(() => {\r\n            \r\n            firebase.storage().ref().child(item.fullPath).delete()\r\n\r\n        })\r\n        })\r\n    })\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleMoveAllFile = () => {\r\n    \r\n    if(this.state.selectedFolder !== this.props.selectedFolder){\r\n      this.state.selected.forEach(items => {\r\n        firebase.database().ref().child('/media/' + items).update({ folder: this.state.selectedFolder });\r\n  \r\n        if(this.state.selectedFolder !== 'default'){\r\n          firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n            \r\n            return total + 1;\r\n          })\r\n        }\r\n\r\n        firebase.database().ref().child('/media_folder/' + this.props.selectedFolder).child('total').transaction( total => {\r\n          \r\n          return total - 1;\r\n        })\r\n        \r\n      })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selected: []\r\n    });\r\n\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'preview'){\r\n        return(\r\n            <DialogContent>\r\n                { this.state.dialogType === 'video/mp4' ? <video style={{ width: '100%'}}  autoPlay src={this.state.dialogUrl} type=\"video/mp4\"></video> : <img alt='' style={{ width: '100%'}} src={this.state.dialogUrl} /> }\r\n            </DialogContent>\r\n        )\r\n    } \r\n\r\n    else if(this.state.dialogOption === 'edit'){\r\n        return(\r\n            <div>\r\n            <DialogContent>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"File Name\"\r\n                    fullWidth\r\n                    value={this.state.selectedFileName} \r\n                    onChange={this._handleEditFileNameChange}\r\n                />\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\" >\r\n                    <InputLabel\r\n                        ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                        }}\r\n                        htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                        Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={this.state.selectedFolder}\r\n                        onChange={this.handleSelectionChange}\r\n                        input={\r\n                        <OutlinedInput\r\n                            labelWidth={100}\r\n                            name=\"folder\"\r\n                            id=\"outlined-age-simple\"\r\n                        />\r\n                        }\r\n                    >\r\n                        \r\n                        <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                        </MenuItem>\r\n                        {this.props.folderCollection.map(n => {\r\n                            return(\r\n                                <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                            )\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleEditFile} color=\"primary\">\r\n                Submit\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"default\">\r\n                Cancel\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these file?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these file?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'moveAll'){\r\n        return(\r\n            <div>\r\n            <DialogContent style={{ width: 200}}>\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\">\r\n                    <InputLabel\r\n                    ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                    }}\r\n                    htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                    Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                    value={this.state.selectedFolder}\r\n                    onChange={this.handleSelectionChange}\r\n                    input={\r\n                        <OutlinedInput\r\n                        labelWidth={100}\r\n                        name=\"folder\"\r\n                        id=\"outlined-age-simple\"\r\n                        />\r\n                    }\r\n                    >\r\n                    \r\n                    <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                    </MenuItem>\r\n                    {this.props.folderCollection.map(n => {\r\n                        return(\r\n                        <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                        )\r\n                    })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleMoveAllFile} color=\"primary\">\r\n                Yes\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                No\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n      \r\n  }\r\n\r\n  render() {\r\n    const { classes, rows, data } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n          >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            {this.state.dialogTitle}\r\n          </DialogTitle>\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <EnhancedTableToolbar numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} onMoveAllClick={this.onMoveAllClick} movefile={this.props.movefile}/>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n              rows={rows}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n\r\n                      {rows.map(value => {\r\n\r\n                          if(value.thumbnail){\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">\r\n                                    {(n.type === 'video/mp4') ? <div style={{ height: 50}} ><MovieRounded style={{ fontSize: 50, color: \"#b4b4b4\" }}/></div> : <img style={{ height: 50}} src={n.imageUrl} alt=\"\"/>}\r\n                                </TableCell>\r\n                            )\r\n                          } \r\n                          \r\n                          else if(value.action)\r\n                          {\r\n                              if(this.props.preview)\r\n                              {\r\n                                return(\r\n                                    <TableCell key={value.id} align=\"left\" padding=\"none\" >\r\n                                        <div className={classes.actionButtons}>\r\n                                            <IconButton color=\"primary\" onClick={() => this.onPreviewClick(n.type, n.name, n.imageUrl) }>\r\n                                                <PreviewIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                                <EditIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                                <DeleteIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                )\r\n                              } else {\r\n                                return(\r\n                                    <TableCell key={value.id} align=\"left\" padding=\"none\" >\r\n                                        <div className={classes.actionButtons}>\r\n                                            <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                                <EditIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                                <DeleteIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                )\r\n                              }\r\n                            \r\n                          }\r\n\r\n                          else if(value.id === 'size')\r\n                          {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{this.bytesToSize(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n\r\n                          else if(value.id === 'created')\r\n                          {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                          else {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                      })}\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport { MovieRounded, SubdirectoryArrowLeft, AddCircleOutline } from '@material-ui/icons'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport firebase from \"firebase\";\r\nimport CustomizedFolderData from \"./CustomizedFolderData\"\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes, onMoveAllClick, onDeleteAllClick, movefile, onAddFolderClick } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            \r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Tooltip title=\"Move\">\r\n                <IconButton aria-label=\"Move\" onClick={onMoveAllClick}>\r\n                <SubdirectoryArrowLeft />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <Tooltip title=\"Add Folder\">\r\n            <IconButton aria-label=\"Add Folder\" onClick={onAddFolderClick}>\r\n              <AddCircleOutline />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    folderId: '',\r\n    folderName: '',\r\n    dialogOption: '',\r\n    selectedFileName: '',\r\n    mediaData: [],\r\n    folderCollection: [],\r\n    addFolderName: ''\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.props.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onFolderClick = (id, name) => {\r\n\r\n    let ref = firebase.database().ref('media');\r\n\r\n    ref.on('value', snapshot => {\r\n      const mediaData = [];\r\n\r\n      snapshot.forEach(childSnapshot => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        \r\n        if(item.folder === id)\r\n        {\r\n          mediaData.push({ id:item.key, name: item.name, imageUrl: item.imageUrl, created: item.created, type: item.type, size: item.size, folder: item.folder });\r\n        }\r\n        \r\n      });\r\n\r\n      this.setState({ mediaData });\r\n    });\r\n\r\n    let folderRef = firebase.database().ref('media_folder');\r\n\r\n    folderRef.on('value', snapshot => {\r\n      const folderCollection = [];\r\n\r\n      snapshot.forEach(childSnapshot => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        \r\n        folderCollection.push({ id:item.key, name: item.name, created: item.created, total: item.total });\r\n        \r\n      });\r\n\r\n      this.setState({ folderCollection });\r\n    });\r\n\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: name,\r\n        folderId: id,\r\n        folderName: name,\r\n        dialogOption: 'folderSelect'\r\n    });\r\n  }\r\n\r\n  onAddFolderClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Add Folder\",\r\n        dialogOption: 'addFolder',\r\n        addFolderName: ''\r\n    });\r\n  }\r\n\r\n  onEditClick = (id, name) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Edit folder\",\r\n        selectedId: id,\r\n        dialogOption: 'edit',\r\n        selectedFileName: name,\r\n        selectedFolder: 'default'\r\n    });\r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove folder\",\r\n        selectedId: id,\r\n        dialogOption: 'delete'\r\n    });\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove folder\",\r\n    });\r\n  }\r\n\r\n  onMoveAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'moveAll',\r\n        dialogTitle: \"Move file\",\r\n        selectedFolder: 'default'\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media_folder/' + this.state.selectedId).update({ name: this.state.selectedFileName });\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    let ref = firebase.database().ref('media');\r\n\r\n      ref.once('value', snapshot => {\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n          const item = childSnapshot.val();\r\n          \r\n          if(item.folder === this.state.selectedId){\r\n              \r\n              firebase.database().ref('media').child(childSnapshot.key).remove().then(() => {\r\n        \r\n                firebase.storage().ref().child(item.fullPath).delete().then(() => {\r\n                    \r\n                }) \r\n        \r\n              })\r\n          }\r\n          \r\n        });\r\n    });\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove()\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selectedId: '',\r\n      selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n\r\n    this.state.selected.forEach(items => {\r\n\r\n      let ref = firebase.database().ref('media');\r\n\r\n      ref.once('value', snapshot => {\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n            const item = childSnapshot.val();\r\n            \r\n            if(item.folder === items){\r\n                \r\n                firebase.database().ref('media').child(childSnapshot.key).remove().then(() => {\r\n            \r\n                    firebase.storage().ref().child(item.fullPath).delete().then(() => {\r\n                        \r\n                    }) \r\n            \r\n                })\r\n\r\n            }\r\n            \r\n            });\r\n        });\r\n\r\n        firebase.database().ref(this.props.dataName).child(items).remove()\r\n    })\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selected: []\r\n    });\r\n  }\r\n\r\n  handleMoveAllFile = () => {\r\n    \r\n    if(this.state.selectedFolder !== 'default'){\r\n      this.state.selected.forEach(items => {\r\n        firebase.database().ref().child('/media/' + items).update({ folder: this.state.selectedFolder });\r\n  \r\n        firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n          \r\n          return total + 1;\r\n        })\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selected: []\r\n    });\r\n\r\n  }\r\n\r\n  _handleFolderNameChange = e => {\r\n    this.setState({\r\n        addFolderName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleAddFolder = async event => {\r\n\r\n    var postData = {\r\n        name: this.state.addFolderName,\r\n        created: firebase.database.ServerValue.TIMESTAMP,\r\n        total: 0\r\n    };\r\n\r\n    // Get a key for a new Post.\r\n    var newPostKey = firebase.database().ref().child('media_folder').push().key;\r\n\r\n    // Write the new post's data simultaneously in the posts list and the user's post list.\r\n    var updates = {};\r\n    updates['/media_folder/' + newPostKey] = postData;\r\n\r\n    firebase.database().ref().update(updates);\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        addFolderName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'folderSelect'){\r\n        return(\r\n            <DialogContent>\r\n                <CustomizedFolderData \r\n                  rows={[\r\n                    { id: 'name', numeric: false, disablePadding: false, label: 'Name', sortable: true },\r\n                    { id: 'imageUrl', numeric: false, disablePadding: false, label: 'File Thumbnail', sortable: true, thumbnail: true },\r\n                    { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n                    { id: 'type', numeric: false, disablePadding: false, label: 'File Type', sortable: true },\r\n                    { id: 'size', numeric: false, disablePadding: false, label: 'File Size', sortable: true },\r\n                    { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n                  ]} \r\n                  data={this.state.mediaData}\r\n                  orderBy={'created'}\r\n                  folderCollection={this.state.folderCollection}\r\n                  preview={true}\r\n                  movefile={true}\r\n                  dataName='media'\r\n                  selectedFolder={this.state.folderId}/>\r\n            </DialogContent>\r\n        )\r\n    } \r\n\r\n    else if(this.state.dialogOption === 'edit'){\r\n        return(\r\n            <div>\r\n            <DialogContent>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"File Name\"\r\n                    fullWidth\r\n                    value={this.state.selectedFileName} \r\n                    onChange={this._handleEditFileNameChange}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleEditFile} color=\"primary\">\r\n                Submit\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"default\">\r\n                Cancel\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these folder?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these folder?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'moveAll'){\r\n        return(\r\n            <div>\r\n            <DialogContent style={{ width: 200}}>\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\">\r\n                    <InputLabel\r\n                    ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                    }}\r\n                    htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                    Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                    value={this.state.selectedFolder}\r\n                    onChange={this.handleSelectionChange}\r\n                    input={\r\n                        <OutlinedInput\r\n                        labelWidth={100}\r\n                        name=\"folder\"\r\n                        id=\"outlined-age-simple\"\r\n                        />\r\n                    }\r\n                    >\r\n                    \r\n                    <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                    </MenuItem>\r\n                    {this.props.folderCollection.map(n => {\r\n                        return(\r\n                        <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                        )\r\n                    })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleMoveAllFile} color=\"primary\">\r\n                Yes\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                No\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n      \r\n    else if(this.state.dialogOption === 'addFolder'){\r\n      return(\r\n        <div>\r\n          <DialogContent>\r\n            <FormControl fullWidth variant=\"outlined\" noValidate autoComplete=\"off\" onSubmit={this.handleAddFolder}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Folder Name\"\r\n                fullWidth\r\n                value={this.state.addFolderName} \r\n                onChange={this._handleFolderNameChange}\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleAddFolder} color=\"primary\">\r\n              Add\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"default\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { classes, rows, data } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n            maxWidth='xl'\r\n          >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            {this.state.dialogTitle}\r\n          </DialogTitle>\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <EnhancedTableToolbar numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} onMoveAllClick={this.onMoveAllClick} movefile={this.props.movefile} onAddFolderClick={this.onAddFolderClick}/>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n              rows={rows}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n\r\n                      {rows.map(value => {\r\n\r\n                          if(value.thumbnail){\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">\r\n                                    {(n.type === 'video/mp4') ? <div style={{ height: 50}} ><MovieRounded style={{ fontSize: 50, color: \"#b4b4b4\" }}/></div> : <img style={{ height: 50}} src={n.imageUrl} alt=\"\"/>}\r\n                                </TableCell>\r\n                            )\r\n                          } \r\n                          \r\n                          else if(value.action)\r\n                          {\r\n                            return(\r\n                              <TableCell key={value.id} align=\"left\" padding=\"none\" >\r\n                                  <div className={classes.actionButtons}>\r\n                                      <IconButton color={n.total > 0 ? \"primary\" : \"default\"} disabled={n.total > 0 ? false : true} onClick={() => this.onFolderClick(n.id, n.name) }>\r\n                                          <FolderIcon fontSize=\"small\" />\r\n                                      </IconButton>\r\n                                      <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                          <EditIcon fontSize=\"small\" />\r\n                                      </IconButton>\r\n                                      <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                          <DeleteIcon fontSize=\"small\" />\r\n                                      </IconButton>\r\n                                  </div>\r\n                              </TableCell>\r\n                          )\r\n                            \r\n                          }\r\n\r\n                          else if(value.id === 'size')\r\n                          {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{this.bytesToSize(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n\r\n                          else if(value.id === 'created')\r\n                          {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                          else {\r\n                            return(\r\n                                <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                      })}\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);","import React, { Component } from 'react';\r\nimport CustomizedExpansionPanel from '../components/CustomizedExpansionPanel'\r\nimport CustomizedDropzone from '../components/CustomizedDropzone'\r\nimport CustomizedTable from '../components/CustomizedTable'\r\nimport CustomizedFolderTable from '../components/CustomizedFolderTable'\r\nimport firebase from \"firebase\";\r\n\r\nclass Contents extends Component {\r\n\r\n  state = {\r\n    mediaData:[],\r\n    folderCollection:[]\r\n  }\r\n\r\n  componentWillMount(){\r\n    let ref = firebase.database().ref('media');\r\n\r\n    ref.on('value', snapshot => {\r\n      const mediaData = [];\r\n\r\n      snapshot.forEach(childSnapshot => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        \r\n        if(item.folder === 'default')\r\n        {\r\n          mediaData.push({ id:item.key, name: item.name, imageUrl: item.imageUrl, created: item.created, type: item.type, size: item.size, folder: item.folder });\r\n        }\r\n        \r\n      });\r\n\r\n      this.setState({ mediaData });\r\n    });\r\n\r\n    let folderRef = firebase.database().ref('media_folder');\r\n\r\n    folderRef.on('value', snapshot => {\r\n      const folderCollection = [];\r\n\r\n      snapshot.forEach(childSnapshot => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        \r\n        folderCollection.push({ id:item.key, name: item.name, created: item.created, total: item.total });\r\n        \r\n      });\r\n\r\n      this.setState({ folderCollection });\r\n    });\r\n  }\r\n\r\n  renderMediaContent(){\r\n    return <CustomizedTable \r\n      rows={[\r\n        { id: 'name', numeric: false, disablePadding: false, label: 'Name', sortable: true },\r\n        { id: 'imageUrl', numeric: false, disablePadding: false, label: 'File Thumbnail', sortable: true, thumbnail: true },\r\n        { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n        { id: 'type', numeric: false, disablePadding: false, label: 'File Type', sortable: true },\r\n        { id: 'size', numeric: false, disablePadding: false, label: 'File Size', sortable: true },\r\n        { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n      ]} \r\n      data={this.state.mediaData}\r\n      orderBy={'created'}\r\n      folderCollection={this.state.folderCollection}\r\n      preview={true}\r\n      movefile={true}\r\n      dataName='media'/>\r\n  }\r\n\r\n  renderFoldersContent(){\r\n    return <CustomizedFolderTable \r\n      rows={[\r\n        { id: 'name', numeric: false, disablePadding: false, label: 'Folder Name', sortable: true },\r\n        { id: 'total', numeric: false, disablePadding: false, label: 'Total Files', sortable: true },\r\n        { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n        { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n      ]} \r\n      data={this.state.folderCollection}\r\n      orderBy={'created'}\r\n      folderCollection={this.state.folderCollection}\r\n      movefile={false}\r\n      dataName='media_folder'/>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n          <CustomizedDropzone />\r\n          <CustomizedExpansionPanel panel={[{ name: 'Media', content: this.renderMediaContent() }, { name: 'Folders', content: this.renderFoldersContent() }]}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contents;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PreviewIcon from '@material-ui/icons/Visibility';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from \"firebase\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes, onDeleteAllClick, movefile, onAddCampaignClick } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            \r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  AppBar: {\r\n    boxShadow: 'none',\r\n    borderBottom: '1px solid #e8e8e8',\r\n  }\r\n});\r\n\r\nfunction TabContainer({ children, dir }) {\r\n  return (\r\n    <div dir={dir}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired,\r\n};\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    folderId: '',\r\n    folderName: '',\r\n    dialogOption: '',\r\n    selectedFileName: '',\r\n    dialogFullscreen: false,\r\n    value: 0\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.props.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onAddCampaignClick = () => {\r\n    \r\n  }\r\n\r\n  onEditClick = (id) => {\r\n    \r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove Campaign\",\r\n        selectedId: id,\r\n        dialogOption: 'delete',\r\n        dialogFullscreen: false\r\n    });\r\n  }\r\n\r\n  onPreviewClick = (id) => {\r\n\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove Campaign\",\r\n        dialogFullscreen: false\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media_folder/' + this.state.selectedId).update({ name: this.state.selectedFileName });\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove()\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selectedId: '',\r\n      selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n\r\n    this.state.selected.forEach(items => {\r\n        firebase.database().ref(this.props.dataName).child(items).remove()\r\n    })\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selected: []\r\n    });\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these campaign?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these campaign?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    } \r\n\r\n  }\r\n\r\n  handleTabsChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleTabsChangeIndex = index => {\r\n    this.setState({ value: index });\r\n  };\r\n  \r\n  render() {\r\n    const { classes, rows, data, theme } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar className={classes.AppBar} position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={this.state.value}\r\n            onChange={this.handleTabsChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab disableRipple label=\"Template List\" />\r\n            <Tab disableRipple label=\"Create Template\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <Dialog\r\n            fullScreen={this.state.dialogFullscreen}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n            maxWidth='xl'\r\n            TransitionComponent={Transition}\r\n          >\r\n          {this.state.dialogFullscreen ? \r\n            <AppBar className={classes.appBar}>\r\n              <Toolbar>\r\n                <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                  {this.state.dialogTitle}\r\n                </Typography>\r\n                <Button color=\"inherit\" onClick={this.handleClose}>\r\n                  save\r\n                </Button>\r\n              </Toolbar> \r\n            </AppBar>: \r\n            <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n              {this.state.dialogTitle}\r\n            </DialogTitle> \r\n          }\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={this.state.value}\r\n          //onChangeIndex={this.handleTabsChangeIndex}\r\n        >\r\n          <TabContainer dir={theme.direction}>\r\n            <EnhancedTableToolbar numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} movefile={this.props.movefile} onAddCampaignClick={this.onAddCampaignClick}/>\r\n            <div className={classes.tableWrapper}>\r\n              <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n                <EnhancedTableHead\r\n                  numSelected={selected.length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={this.handleSelectAllClick}\r\n                  onRequestSort={this.handleRequestSort}\r\n                  rowCount={data.length}\r\n                  rows={rows}\r\n                />\r\n                <TableBody>\r\n                  {stableSort(data, getSorting(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map(n => {\r\n                      const isSelected = this.isSelected(n.id);\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          aria-checked={isSelected}\r\n                          tabIndex={-1}\r\n                          key={n.id}\r\n                          selected={isSelected}\r\n                        >\r\n                          <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                            <Checkbox checked={isSelected} />\r\n                          </TableCell>\r\n\r\n                          {rows.map(value => {\r\n\r\n                              if(value.action)\r\n                              {\r\n                                return(\r\n                                  <TableCell key={value.id} align=\"left\" padding=\"none\" >\r\n                                      <div className={classes.actionButtons}>\r\n                                          <IconButton color={n.total > 0 ? \"primary\" : \"default\"} disabled={n.total > 0 ? false : true} onClick={() => this.onPreviewClick(n.id) }>\r\n                                              <PreviewIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                          <IconButton onClick={() => this.onEditClick(n.id) }>\r\n                                              <EditIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                          <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                              <DeleteIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                      </div>\r\n                                  </TableCell>\r\n                                )\r\n                                \r\n                              }\r\n\r\n                              else if(value.id === 'created')\r\n                              {\r\n                                return(\r\n                                    <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                                  )\r\n                              }\r\n\r\n                              else if(value.id === 'template')\r\n                              {\r\n                                return(\r\n                                    <TableCell  key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n.template_name}</TableCell>\r\n                                  )\r\n                              }\r\n                              \r\n                              else {\r\n                                return(\r\n                                    <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                                  )\r\n                              }\r\n                              \r\n                          })}\r\n                        \r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 49 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={data.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                'aria-label': 'Previous Page',\r\n              }}\r\n              nextIconButtonProps={{\r\n                'aria-label': 'Next Page',\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n            />\r\n          </TabContainer>\r\n          <TabContainer dir={theme.direction}>\r\n              \r\n          </TabContainer>\r\n        </SwipeableViews>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EnhancedTable);","import React, { Component } from 'react';\r\nimport CustomizedTemplateTable from '../components/CustomizedTemplateTable';\r\nimport firebase from \"firebase\";\r\n\r\nclass Templates extends Component {\r\n\r\n    state = {\r\n      templateData: []\r\n    }\r\n\r\n    componentWillMount(){\r\n      let ref = firebase.database().ref('template');\r\n\r\n      ref.on('value', snapshot => {\r\n        const templateData = [];\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n          const item = childSnapshot.val();\r\n          item.key = childSnapshot.key;\r\n\r\n          templateData.push({ id:item.key, name: item.name, created: item.created, size: item.size, container: item.container });\r\n          \r\n        });\r\n\r\n        this.setState({ templateData });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <div>\r\n           <CustomizedTemplateTable \r\n              rows={[\r\n                { id: 'name', numeric: false, disablePadding: false, label: 'Template Name', sortable: true },\r\n                { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n                { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n              ]} \r\n              data={this.state.templateData}\r\n              orderBy={'created'}\r\n              movefile={false}\r\n              dataName='template'/>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Templates;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport firebase from \"firebase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {sortableContainer, sortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CustomizedTable from './CustomizedTable'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AutoFitImage from 'react-image-autofit-frame';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    }\r\n});\r\n\r\nconst windowHeight = window.innerHeight - 115\r\n\r\nconst SortableItem = sortableElement(({value, index, handleToggle, checked, mediaCollection}) => \r\n{\r\n  return mediaCollection.map(val => {\r\n    if(val.id === value){\r\n      return(\r\n        <ListItem key={index} style={{ backgroundColor: '#fafafa'}} divider dense button onClick={handleToggle(val.id)}>\r\n          <Checkbox\r\n          checked={checked.indexOf(val.id) !== -1}\r\n          tabIndex={-1}\r\n          />\r\n          <Avatar src={val.imageUrl}>\r\n          </Avatar>\r\n          <ListItemText primary={val.name} />\r\n        </ListItem>\r\n      )\r\n    }\r\n  })\r\n})\r\n\r\nconst SortableContainer = sortableContainer(({children}) => {\r\n  return <List>{children}</List>;\r\n});\r\n\r\nclass CustomizedAddCampaign extends Component {\r\n\r\n    state = {\r\n        selectedTemplate: 'default',\r\n        templateCollection: [],\r\n        contents: [[]],\r\n        allContainer: [''],\r\n        openDialog: false,\r\n        dialogOption: '',\r\n        dialogTitle: '',\r\n        mediaData:[],\r\n        folderCollection: [],\r\n        currentContainer: 0,\r\n        checked: [],\r\n        campaignName: '',\r\n        mediaCollection: []\r\n    }\r\n\r\n    componentWillMount(){\r\n\r\n      let ref = firebase.database().ref('media');\r\n\r\n      ref.on('value', snapshot => {\r\n          const mediaCollection = [];\r\n\r\n          snapshot.forEach(childSnapshot => {\r\n            const item = childSnapshot.val();\r\n            item.key = childSnapshot.key;\r\n            \r\n            mediaCollection.push({id:item.key, name: item.name, imageUrl: item.imageUrl, created: item.created, type: item.type, size: item.size, folder: item.folder });\r\n            \r\n          });\r\n\r\n          this.setState({ mediaCollection });\r\n      });\r\n\r\n        let folderRef = firebase.database().ref('media_folder');\r\n\r\n        folderRef.on('value', snapshot => {\r\n        const folderCollection = [];\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n            const item = childSnapshot.val();\r\n            item.key = childSnapshot.key;\r\n            \r\n            folderCollection.push({ id:item.key, name: item.name, created: item.created, total: item.total });\r\n            \r\n        });\r\n\r\n        this.setState({ folderCollection });\r\n        });\r\n\r\n        let templateRef = firebase.database().ref('template');\r\n\r\n        templateRef.on('value', snapshot => {\r\n            const templateCollection = [];\r\n\r\n            snapshot.forEach(childSnapshot => {\r\n                const item = childSnapshot.val();\r\n                item.key = childSnapshot.key;\r\n                templateCollection.push({ id:item.key, name: item.name, created: item.created, container: item.container });\r\n            });\r\n\r\n            this.setState({ templateCollection });\r\n        });\r\n    }\r\n\r\n    handleTemplateChange = event => {\r\n        const contents = []\r\n        const allContainer = []\r\n        if(event.target.value !== 'default')\r\n        {\r\n          this.state.templateCollection.map(value => { \r\n            if(event.target.value === value.id){\r\n              value.container.map(value => { \r\n                contents.push([])\r\n                allContainer.push('')\r\n              })\r\n            }\r\n          })\r\n        } else {\r\n          contents.push([])\r\n          allContainer.push('')\r\n        }\r\n\r\n        this.setState({ selectedTemplate: event.target.value, contents, allContainer, currentContainer: 0 })\r\n    }\r\n\r\n    handleToggle = value => () => {\r\n      \r\n        const { checked } = this.state;\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n        \r\n        if (currentIndex === -1) {\r\n          newChecked.push(value);\r\n        } else {\r\n          newChecked.splice(currentIndex, 1);\r\n        }\r\n    \r\n        this.setState({\r\n          checked: newChecked,\r\n        });\r\n    };\r\n\r\n    onSortEnd = ({oldIndex, newIndex}) => {\r\n\r\n        var itemsArray = [[]]\r\n        var finalItemsArray = [[]]\r\n  \r\n        finalItemsArray = this.state.contents\r\n        itemsArray = arrayMove(this.state.contents[this.state.currentContainer], oldIndex, newIndex)\r\n        \r\n        finalItemsArray.map((value, index) => {\r\n          if(index == this.state.currentContainer){\r\n            finalItemsArray[index] = itemsArray\r\n          }\r\n        })\r\n        \r\n        this.setState({ contents: finalItemsArray });\r\n    };\r\n  \r\n    onSortStart = ({node, index, collection, isKeySorting}) => {\r\n    \r\n        const allContainer = this.state.allContainer.map((value, num) => {\r\n            \r\n            if(num == this.state.currentContainer)\r\n            {\r\n            return this.state.contents[this.state.currentContainer][index]\r\n            } else {\r\n            return this.state.allContainer[num]\r\n            }\r\n        })\r\n\r\n        this.setState({ allContainer })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ openDialog: false });\r\n    };\r\n\r\n    renderSortableItem = () => {\r\n     if(this.state.contents[this.state.currentContainer])\r\n     {\r\n      return this.state.contents[this.state.currentContainer].map((val,index)=>{\r\n          return(\r\n            <SortableItem key={`item-${index}`} index={index} value={val} handleToggle={this.handleToggle} checked={this.state.checked} mediaCollection={this.state.mediaCollection}/>\r\n          )\r\n        })\r\n     } else {\r\n        return(\r\n          <div></div>\r\n        )\r\n     }\r\n    }\r\n\r\n    renderSortable = () => {\r\n        return (\r\n            <SortableContainer lockAxis=\"y\" onSortEnd={this.onSortEnd} onSortStart={this.onSortStart}>\r\n                <Divider/>\r\n                {this.renderSortableItem()}\r\n            </SortableContainer>\r\n        )\r\n    }\r\n\r\n    renderTemplate = () => {\r\n\r\n      if(this.state.selectedTemplate !== 'default'){\r\n        \r\n        const templateData = [];\r\n        this.state.templateCollection.map((value, index) => {\r\n          if(value.id === this.state.selectedTemplate)\r\n          {\r\n            value.container.map((val, index) => {\r\n              templateData.push({ id:val.id, width: val.width, height: val.height })\r\n            })\r\n            \r\n          }\r\n        })\r\n\r\n        const mediaData = [];\r\n        \r\n        this.state.allContainer.map((value, index) => { \r\n          \r\n          if(this.state.allContainer[index] !== '')\r\n          {\r\n\r\n            this.state.mediaCollection.map((value, mediaIndex) => {\r\n              if(value.id === this.state.allContainer[index])\r\n              {\r\n                mediaData.push({ id: value.id, name: value.name, imageUrl: value.imageUrl })\r\n              }\r\n            })\r\n\r\n          } else {\r\n            mediaData.push({ id: '', name: '', imageUrl: '' })\r\n          }\r\n          \r\n        })\r\n\r\n       \r\n        \r\n        return templateData.map((value, index) => \r\n          <Grid key={value.id} onClick={()=> { \r\n            \r\n              if(this.state.currentContainer != index)\r\n              {\r\n                this.setState({ currentContainer: index, checked: [] }) \r\n              }\r\n            \r\n            }} item>\r\n            <Paper square \r\n              style={{height: value.height/4, width:value.width/4}}\r\n            >\r\n              <AutoFitImage imgSize=\"contain\" frameWidth={value.width/4 + \"px\"} frameHeight={value.height/4 + \"px\"} imgSrc={mediaData[index] ? mediaData[index].imageUrl : ''} style={{/*..your style here..*/}}/>\r\n            </Paper>\r\n          </Grid>)\r\n\r\n      } else {\r\n\r\n        const mediaData = [];\r\n        \r\n        this.state.allContainer.map((value, index) => { \r\n          \r\n          if(this.state.allContainer[index] && this.state.allContainer[index] !== '')\r\n          {\r\n            \r\n            this.state.mediaCollection.map((val, mediaindex) => {\r\n              if(val.id === this.state.allContainer[index])\r\n              {\r\n                mediaData.push({ id: val.id, name: val.name, imageUrl: val.imageUrl })\r\n              }\r\n            })\r\n          } else {\r\n            mediaData.push({ id: '', name: '', imageUrl: '' })\r\n          }\r\n          \r\n        })\r\n       \r\n        return (\r\n          <Grid item>\r\n            <Paper square\r\n              style={{ height: 1920/4, width:1080/4 }}\r\n            >\r\n              <AutoFitImage imgSize=\"contain\" frameWidth={1080/4 + \"px\"} frameHeight={1920/4 + \"px\"} imgSrc={mediaData[0] ? mediaData[0].imageUrl : ''} style={{/*..your style here..*/}}/>\r\n            </Paper>\r\n          </Grid>)\r\n      }\r\n      \r\n    }\r\n\r\n    renderDialog = () => {\r\n        if(this.state.dialogOption === 'addMedia'){\r\n            return(\r\n                <div>\r\n                    <DialogContent>\r\n                    <CustomizedTable \r\n                        rows={[\r\n                            { id: 'name', numeric: false, disablePadding: false, label: 'Name', sortable: true },\r\n                            { id: 'imageUrl', numeric: false, disablePadding: false, label: 'File Thumbnail', sortable: true, thumbnail: true },\r\n                            { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n                            { id: 'type', numeric: false, disablePadding: false, label: 'File Type', sortable: true },\r\n                            { id: 'size', numeric: false, disablePadding: false, label: 'File Size', sortable: true },\r\n                            { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n                        ]} \r\n                        orderBy={'created'}\r\n                        folderCollection={this.state.folderCollection}\r\n                        preview={true}\r\n                        movefile={true}\r\n                        select={true}\r\n                        dataName='media'\r\n                        folderSelection={true}\r\n                        onAddMediaClick={this.onAddMediaClick}/>\r\n                    </DialogContent>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    onAddMediaClick = selected => {\r\n\r\n      const contents = this.state.contents\r\n      selected.map((value, index) => {\r\n        contents[this.state.currentContainer].push(value)\r\n      })\r\n\r\n      if(this.state.selectedTemplate !== 'default'){\r\n        const allContainer = []\r\n        this.state.templateCollection.map((value, index) => {\r\n          if(value.id === this.state.selectedTemplate)\r\n          {\r\n            value.container.map((val, index) => {\r\n              if(this.state.allContainer[index] == '' && index == this.state.currentContainer)\r\n              {\r\n                allContainer.push(contents[this.state.currentContainer][0])\r\n              } else {\r\n                allContainer.push(this.state.allContainer[index])\r\n              }\r\n            })\r\n            \r\n          }\r\n        })\r\n\r\n        this.setState({ contents, openDialog: false, allContainer })\r\n      } else {\r\n        const allContainer = []\r\n        allContainer.push(contents[this.state.currentContainer][0])\r\n\r\n        this.setState({ contents, openDialog: false, allContainer })\r\n      }\r\n    }\r\n\r\n    handleCampaignNameChange = event => {\r\n      this.setState({ campaignName: event.target.value });\r\n    };  \r\n\r\n    handleSaveCampaign = () => {\r\n      \r\n      if(this.state.selectedTemplate !== 'default' )\r\n      {\r\n        let templateRef = firebase.database().ref('template/' + this.state.selectedTemplate);\r\n\r\n        templateRef.once('value', snapshot => {\r\n          const item = snapshot.val();\r\n  \r\n          var postData = {\r\n            name: this.state.campaignName == ''? 'default' : this.state.campaignName,\r\n            created: firebase.database.ServerValue.TIMESTAMP,\r\n            content: this.state.contents,\r\n            template: this.state.selectedTemplate,\r\n            template_name: item.name\r\n          };\r\n      \r\n          // Get a key for a new Post.\r\n          var newPostKey = firebase.database().ref().child('campaign').push().key;\r\n      \r\n          // Write the new post's data simultaneously in the posts list and the user's post list.\r\n          var updates = {};\r\n          updates['/campaign/' + newPostKey] = postData;\r\n        \r\n          firebase.database().ref().update(updates);\r\n            \r\n        });\r\n      } else {\r\n        var postData = {\r\n          name: this.state.campaignName == ''? 'default' : this.state.campaignName,\r\n          created: firebase.database.ServerValue.TIMESTAMP,\r\n          content: this.state.contents,\r\n          template: this.state.selectedTemplate,\r\n          template_name: 'default'\r\n        };\r\n    \r\n        // Get a key for a new Post.\r\n        var newPostKey = firebase.database().ref().child('campaign').push().key;\r\n    \r\n        // Write the new post's data simultaneously in the posts list and the user's post list.\r\n        var updates = {};\r\n        updates['/campaign/' + newPostKey] = postData;\r\n      \r\n        firebase.database().ref().update(updates);\r\n      }\r\n      this.props.handleTabsChangeIndex(0)\r\n      \r\n      this.setState({ selectedTemplate:'default', contents: [[]], campaignName: '', allContainer: [], currentContainer: 0 })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n          <div className={classes.root}>\r\n            <Dialog\r\n                onClose={this.handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={this.state.openDialog}\r\n                maxWidth='xl'\r\n            >\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n                {this.state.dialogTitle}\r\n            </DialogTitle> \r\n            {this.renderDialog()}\r\n            </Dialog>\r\n            <Grid style={{ minHeight:windowHeight }} container>\r\n                <Grid style={{ height: windowHeight, padding: 10 }} item xs={3}>\r\n                    <FormControl style={{ marginTop: 10 }} fullWidth variant=\"outlined\" >\r\n                        <InputLabel\r\n                            ref={ref => {\r\n                            this.InputLabelRef = ref;\r\n                            }}\r\n                            htmlFor=\"outlined-age-simple\"\r\n                        >\r\n                            Template\r\n                        </InputLabel>\r\n                        <Select\r\n                            value={this.state.selectedTemplate}\r\n                            onChange={this.handleTemplateChange}\r\n                            input={\r\n                            <OutlinedInput\r\n                                labelWidth={100}\r\n                                name=\"folder\"\r\n                                id=\"outlined-age-simple\"\r\n                            />\r\n                            }\r\n                        >\r\n                            \r\n                            <MenuItem value=\"default\">\r\n                            <em>Default</em>\r\n                            </MenuItem>\r\n                            {this.state.templateCollection.map(n => {\r\n                            return(\r\n                                <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                            )\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Button fullWidth style={{ marginTop: 10 }} variant=\"outlined\" color=\"primary\" onClick={()=> this.setState({ openDialog: true, dialogOption: 'addMedia', dialogTitle: 'Add Media' }) }>\r\n                        Add File\r\n                        </Button>\r\n                    </div>\r\n                    <Grid style={{ position: 'relative', overflow: 'auto' }} item xs={12}>\r\n                        {this.renderSortable()}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container alignItems=\"center\" justify=\"center\" style={{ backgroundColor: '#efefef' , height: windowHeight, padding: 10}} item xs={6}>\r\n                    <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"flex-start\" style={{ height: 1920/4, width: 1080/4, backgroundColor: '#262626'}} >\r\n                      {this.renderTemplate()}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid style={{ height: windowHeight, padding: 10 }} item xs={3}>\r\n                  <Button fullWidth style={{ marginTop: 10 }} variant=\"outlined\" color=\"primary\" onClick={()=> this.handleSaveCampaign()}>\r\n                  Save\r\n                  </Button>\r\n                  <TextField\r\n                    fullWidth\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"standard-name\"\r\n                    label=\"Campaign Name\"\r\n                    value={this.state.campaignName}\r\n                    onChange={this.handleCampaignNameChange}\r\n                  />\r\n                </Grid>\r\n            </Grid>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nCustomizedAddCampaign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(CustomizedAddCampaign);\r\n  ","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PreviewIcon from '@material-ui/icons/Visibility';\r\nimport { AddCircleOutline } from '@material-ui/icons'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from \"firebase\";\r\nimport CustomizedAddCampaign from './CustomizedAddCampaign'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes, onDeleteAllClick, movefile, onAddCampaignClick } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            \r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  AppBar: {\r\n    boxShadow: 'none',\r\n    borderBottom: '1px solid #e8e8e8',\r\n  }\r\n});\r\n\r\nfunction TabContainer({ children, dir }) {\r\n  return (\r\n    <div dir={dir}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dir: PropTypes.string.isRequired,\r\n};\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    folderId: '',\r\n    folderName: '',\r\n    dialogOption: '',\r\n    selectedFileName: '',\r\n    dialogFullscreen: false,\r\n    value: 0\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.props.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onAddCampaignClick = () => {\r\n    \r\n  }\r\n\r\n  onEditClick = (id) => {\r\n    \r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove Campaign\",\r\n        selectedId: id,\r\n        dialogOption: 'delete',\r\n        dialogFullscreen: false\r\n    });\r\n  }\r\n\r\n  onPreviewClick = (id) => {\r\n\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove Campaign\",\r\n        dialogFullscreen: false\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media_folder/' + this.state.selectedId).update({ name: this.state.selectedFileName });\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove()\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selectedId: '',\r\n      selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n\r\n    this.state.selected.forEach(items => {\r\n        firebase.database().ref(this.props.dataName).child(items).remove()\r\n    })\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selected: []\r\n    });\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these campaign?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these campaign?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    } \r\n\r\n  }\r\n\r\n  handleTabsChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleTabsChangeIndex = index => {\r\n    this.setState({ value: index });\r\n  };\r\n  \r\n  render() {\r\n    const { classes, rows, data, theme } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar className={classes.AppBar} position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={this.state.value}\r\n            onChange={this.handleTabsChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab disableRipple label=\"Campaign List\" />\r\n            <Tab disableRipple label=\"Create Campaign\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <Dialog\r\n            fullScreen={this.state.dialogFullscreen}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n            maxWidth='xl'\r\n            TransitionComponent={Transition}\r\n          >\r\n          {this.state.dialogFullscreen ? \r\n            <AppBar className={classes.appBar}>\r\n              <Toolbar>\r\n                <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                  {this.state.dialogTitle}\r\n                </Typography>\r\n                <Button color=\"inherit\" onClick={this.handleClose}>\r\n                  save\r\n                </Button>\r\n              </Toolbar> \r\n            </AppBar>: \r\n            <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n              {this.state.dialogTitle}\r\n            </DialogTitle> \r\n          }\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={this.state.value}\r\n          //onChangeIndex={this.handleTabsChangeIndex}\r\n        >\r\n          <TabContainer dir={theme.direction}>\r\n            <EnhancedTableToolbar numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} movefile={this.props.movefile} onAddCampaignClick={this.onAddCampaignClick}/>\r\n            <div className={classes.tableWrapper}>\r\n              <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n                <EnhancedTableHead\r\n                  numSelected={selected.length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={this.handleSelectAllClick}\r\n                  onRequestSort={this.handleRequestSort}\r\n                  rowCount={data.length}\r\n                  rows={rows}\r\n                />\r\n                <TableBody>\r\n                  {stableSort(data, getSorting(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map(n => {\r\n                      const isSelected = this.isSelected(n.id);\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          aria-checked={isSelected}\r\n                          tabIndex={-1}\r\n                          key={n.id}\r\n                          selected={isSelected}\r\n                        >\r\n                          <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                            <Checkbox checked={isSelected} />\r\n                          </TableCell>\r\n\r\n                          {rows.map(value => {\r\n\r\n                              if(value.action)\r\n                              {\r\n                                return(\r\n                                  <TableCell key={value.id} align=\"left\" padding=\"none\" >\r\n                                      <div className={classes.actionButtons}>\r\n                                          <IconButton color={n.total > 0 ? \"primary\" : \"default\"} disabled={n.total > 0 ? false : true} onClick={() => this.onPreviewClick(n.id) }>\r\n                                              <PreviewIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                          <IconButton onClick={() => this.onEditClick(n.id) }>\r\n                                              <EditIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                          <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                              <DeleteIcon fontSize=\"small\" />\r\n                                          </IconButton>\r\n                                      </div>\r\n                                  </TableCell>\r\n                                )\r\n                                \r\n                              }\r\n\r\n                              else if(value.id === 'created')\r\n                              {\r\n                                return(\r\n                                    <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                                  )\r\n                              }\r\n\r\n                              else if(value.id === 'template')\r\n                              {\r\n                                return(\r\n                                    <TableCell  key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n.template_name}</TableCell>\r\n                                  )\r\n                              }\r\n                              \r\n                              else {\r\n                                return(\r\n                                    <TableCell key={value.id} onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                                  )\r\n                              }\r\n                              \r\n                          })}\r\n                        \r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 49 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={data.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                'aria-label': 'Previous Page',\r\n              }}\r\n              nextIconButtonProps={{\r\n                'aria-label': 'Next Page',\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n            />\r\n          </TabContainer>\r\n          <TabContainer dir={theme.direction}>\r\n              <CustomizedAddCampaign handleTabsChangeIndex={this.handleTabsChangeIndex}/>\r\n          </TabContainer>\r\n        </SwipeableViews>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EnhancedTable);","import React, { Component } from 'react';\r\nimport CustomizedCampaignTable from '../components/CustomizedCampaignTable';\r\nimport firebase from \"firebase\";\r\n\r\nclass Campaigns extends Component {\r\n\r\n    state = {\r\n      campaignData: []\r\n    }\r\n\r\n    componentWillMount(){\r\n      let ref = firebase.database().ref('campaign');\r\n\r\n      ref.on('value', snapshot => {\r\n        const campaignData = [];\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n          const item = childSnapshot.val();\r\n          item.key = childSnapshot.key;\r\n\r\n          campaignData.push({ id:item.key, name: item.name, created: item.created, template: item.template, template_name: item.template_name });\r\n          \r\n        });\r\n\r\n        this.setState({ campaignData });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <div>\r\n           <CustomizedCampaignTable \r\n              rows={[\r\n                { id: 'name', numeric: false, disablePadding: false, label: 'Folder Name', sortable: true },\r\n                { id: 'template', numeric: false, disablePadding: false, label: 'Template', sortable: true },\r\n                { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n                { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n              ]} \r\n              data={this.state.campaignData}\r\n              orderBy={'created'}\r\n              movefile={false}\r\n              dataName='campaign'/>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Campaigns;","import React, { Component } from 'react';\r\n\r\nclass Networks extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Networks</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Networks;","import React, { Component } from 'react';\r\n\r\nclass Reports extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Reports</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Reports;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    maxWidth: 936,\r\n    margin: 'auto',\r\n    overflow: 'hidden',\r\n    marginTop: 20\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  searchInput: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  addUser: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  contentWrapper: {\r\n    margin: '40px 16px',\r\n  },\r\n});\r\n\r\nfunction Content(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={16} alignItems=\"center\">\r\n            <Grid item>\r\n              <SearchIcon className={classes.block} color=\"inherit\" />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <TextField\r\n                fullWidth\r\n                placeholder=\"Search by email address, phone number, or user UID\"\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  className: classes.searchInput,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\r\n                Add user\r\n              </Button>\r\n              <Tooltip title=\"Reload\">\r\n                <IconButton>\r\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.contentWrapper}>\r\n        <Typography color=\"textSecondary\" align=\"center\">\r\n          No users for this project yet\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Error extends Component {\r\n    render() {\r\n      return <Redirect to='/digital-signage' />\r\n    }\r\n}\r\n  \r\nexport default Error;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from \"react-router-dom\";\r\nimport { DashboardRounded, TvRounded, PermMediaRounded, PictureInPictureRounded, WebRounded, CellWifiRounded, ListAltRounded, PersonRounded, SettingsRounded, ExitToAppRounded } from '@material-ui/icons';\r\nimport app from \"../firebase/base\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: 0,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n});\r\n\r\nclass Navigation extends Component {\r\n\r\n  state = {\r\n    open: false,\r\n    appBarTitle:'Dashboard'\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  navigateScreen = (index) => {\r\n    if(index === 0){\r\n      \r\n    } else {\r\n      app.auth().signOut();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes, theme } = this.props;\r\n    const { open } = this.state;\r\n    const icons = [<DashboardRounded />, <TvRounded />, <PermMediaRounded/>, <PictureInPictureRounded/>, <WebRounded/>, <CellWifiRounded/>, <ListAltRounded/>, <PersonRounded/>]\r\n    const secondaryIcons = [<SettingsRounded/>, <ExitToAppRounded/>]\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              {this.state.appBarTitle}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n          {['Dashboard', 'Stations', 'Contents', 'Templates', 'Campaigns', 'Networks', 'Reports', 'Admin'].map((text, index) => (\r\n              <ListItem button component={Link} to={text === 'Dashboard' ? '/digital-signage' : '/digital-signage/' + text.toLowerCase()} key={text} onClick={()=> this.setState({ open: false, appBarTitle: text })}>\r\n                <ListItemIcon>{icons[index]}</ListItemIcon>\r\n                <ListItemText primary={<Typography style={{ fontWeight:'500', color: '#4d4c4c' }}>{text}</Typography>} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['Settings', 'Log Out'].map((text, index) => (\r\n              <ListItem button key={text} onClick={()=> this.navigateScreen(index) }>\r\n                <ListItemIcon>{secondaryIcons[index]}</ListItemIcon>\r\n                <ListItemText primary={<Typography style={{ fontWeight:'500',color: '#4d4c4c' }}>{text}</Typography>} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          {this.props.components}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Navigation);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//authentication\r\nimport SignIn from \"./screens/authentication/SignIn\";\r\nimport SignUp from \"./screens/authentication/SignUp\";\r\nimport ForgotPassword from \"./screens/authentication/ForgotPassword\";\r\nimport app from \"./firebase/base\";\r\n\r\n//screens\r\nimport Dashboard from \"./screens/Dashboard\";\r\nimport Stations from \"./screens/Stations\";\r\nimport Contents from \"./screens/Contents\";\r\nimport Templates from \"./screens/Templates\";\r\nimport Campaigns from \"./screens/Campaigns\";\r\nimport Networks from \"./screens/Networks\";\r\nimport Reports from \"./screens/Reports\";\r\nimport Admin from \"./screens/Admin\";\r\nimport Error from \"./screens/Error\";\r\nimport Navigation from \"./screens/Navigation\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    loading: true, authenticated: false, user: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    app.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.setState({\r\n          authenticated: true,\r\n          currentUser: user,\r\n          loading: false\r\n        });\r\n      } else {\r\n        this.setState({\r\n          authenticated: false,\r\n          currentUser: null,\r\n          loading: false\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderRoute(){\r\n    return(\r\n      <Switch>\r\n        <Route path=\"/digital-signage\" component={Dashboard} exact />\r\n        <Route path=\"/digital-signage/stations\" component={Stations} />\r\n        <Route path=\"/digital-signage/contents\" component={Contents} />\r\n        <Route path=\"/digital-signage/templates\" component={Templates} />\r\n        <Route path=\"/digital-signage/campaigns\" component={Campaigns} />\r\n        <Route path=\"/digital-signage/networks\" component={Networks} />\r\n        <Route path=\"/digital-signage/reports\" component={Reports} />\r\n        <Route path=\"/digital-signage/admin\" component={Admin} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const { authenticated, loading } = this.state;\r\n\r\n    if (loading) {\r\n      return <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'  }}><CircularProgress color=\"primary\" /></div>;\r\n    }\r\n\r\n    if(authenticated)\r\n    {\r\n      return (\r\n        <BrowserRouter>\r\n          <div>\r\n            <Navigation components={this.renderRoute()}/>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    } else {\r\n      return (\r\n        <BrowserRouter>\r\n          <div>\r\n            <Switch>\r\n              <Route path=\"/digital-signage\" component={SignIn} exact/>\r\n              <Route path=\"/digital-signage/register\" component={SignUp} />\r\n              <Route path=\"/digital-signage/forgotpassword\" component={ForgotPassword} />\r\n              <Route component={Error} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}