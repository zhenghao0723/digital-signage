{"version":3,"sources":["firebase/base.js","screens/authentication/SignIn.js","screens/authentication/SignUp.js","screens/authentication/ForgotPassword.js","screens/Dashboard.js","screens/Stations.js","components/CustomizedExpansionPanel.js","components/CustomizedDropzone.js","components/CustomizedTable.js","components/CustomizedFolderData.js","components/CustomizedFolderTable.js","screens/Contents.js","screens/Templates.js","screens/Campaigns.js","screens/Networks.js","screens/Reports.js","screens/Admin.js","screens/Error.js","screens/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLoad","console","log","onVerify","setState","isVerified","onExpire","handleSignIn","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","_this$state","email","password","wrap","_context","prev","next","preventDefault","state","auth","signInWithEmailAndPassword","t0","alert","stop","_x","apply","arguments","handleChange","target","value","passwordhandleChange","captcha","classes","react_default","createElement","style","display","justifyContent","alignItems","height","Paper_default","className","root","elevation","Typography_default","variant","title","noValidate","autoComplete","onSubmit","TextField_default","fullWidth","autoFocus","margin","id","label","type","textField","onChange","marginTop","dist_default","sitekey","Button_default","disabled","marginLeft","component","Link","to","Component","withStyles","theme","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","width","backgroundColor","fontWeight","SignUp","handleSignUp","createUserWithEmailAndPassword","ForgotPassword","redirect","handleForgotPassword","sendPasswordResetEmail","then","react_router","Dashboard","Stations","ExpansionPanel","border","boxShadow","&:not(:last-child)","borderBottom","&:before","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","&$expanded","content","ExpansionPanelSummary_default","muiName","ExpansionPanelDetails","padding","MuiExpansionPanelDetails","CustomizedExpansionPanel","panel","_this2","map","index","CustomizedExpansionPanel_ExpansionPanel","key","square","CustomizedExpansionPanel_ExpansionPanelSummary","name","CustomizedExpansionPanel_ExpansionPanelDetails","React","Container","styled","div","_templateObject","getColor","isDragAccept","isDragReject","isDragActive","thumb","borderRadius","marginRight","boxSizing","thumbInner","minWidth","overflow","CustomizedDropzone","isUploading","uploadProgress","filenames","downloadURLs","files","handleUploadStart","handleUploadProgress","progress","handleUploadError","error","handleUploadSuccess","filename","downloadURL","storage","ref","child","getDownloadURL","sent","getMetadata","metadata","postData","imageUrl","size","created","database","ServerValue","TIMESTAMP","contentType","fullPath","folder","updates","push","update","catch","oldState","concat","toConsumableArray","customOnChangeHandler","filesToStore","Array","from","forEach","file","startUploadManually","fileUploader","startUpload","onClearFileList","onDrop","lib_default","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","multiple","hidden","es","minSize","maxSize","_ref2","getRootProps","getInputProps","rejectedFiles","flexDirection","flexWrap","index_es","fontSize","color","alt","src","URL","createObjectURL","onClick","length","desc","b","orderBy","EnhancedTableHead","createSortHandler","property","onRequestSort","_this$props","onSelectAllClick","order","numSelected","rowCount","rows","TableHead_default","TableRow_default","TableCell_default","Checkbox_default","indeterminate","checked","row","align","numeric","disablePadding","sortDirection","Tooltip_default","disableTouchListener","sortable","disableFocusListener","disableHoverListener","placement","enterDelay","TableSortLabel_default","active","direction","EnhancedTableToolbar","onMoveAllClick","onDeleteAllClick","movefile","Toolbar_default","classNames","defineProperty","highlight","spacer","actions","IconButton_default","aria-label","Delete_default","paddingRight","palette","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTable","_this3","selected","selectedId","page","rowsPerPage","openDialog","dialogTitle","dialogUrl","dialogType","dialogOption","selectedFileName","handleRequestSort","handleSelectAllClick","data","n","handleClick","selectedIndex","indexOf","newSelected","slice","handleChangePage","handleChangeRowsPerPage","isSelected","bytesToSize","bytes","i","parseInt","Math","floor","round","pow","onPreviewClick","url","onEditClick","selectedFolder","onDeleteClick","handleClose","_handleEditFileNameChange","e","handleSelectionChange","handleEditFile","transaction","total","handleRemoveFile","dataName","once","snapshot","item","val","remove","delete","handleRemoveAllFile","items","handleMoveAllFile","renderDialog","DialogContent_default","autoPlay","FormControl_default","InputLabel_default","InputLabelRef","htmlFor","Select_default","input","OutlinedInput_default","labelWidth","MenuItem_default","folderCollection","DialogActions_default","DialogContentText_default","_this4","_this$props2","emptyRows","min","Dialog_default","onClose","aria-labelledby","open","DialogTitle_default","CustomizedTable_EnhancedTableToolbar","tableWrapper","Table_default","table","CustomizedTable_EnhancedTableHead","TableBody_default","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","thumbnail","action","preview","actionButtons","Visibility_default","Edit_default","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","overflowX","CustomizedFolderData_EnhancedTableToolbar","CustomizedFolderData_EnhancedTableHead","onAddFolderClick","folderId","folderName","mediaData","addFolderName","onFolderClick","on","childSnapshot","_handleFolderNameChange","handleAddFolder","newPostKey","CustomizedFolderData","maxWidth","CustomizedFolderTable_EnhancedTableToolbar","CustomizedFolderTable_EnhancedTableHead","Folder_default","Contents","CustomizedTable","CustomizedFolderTable","components_CustomizedDropzone","components_CustomizedExpansionPanel","renderMediaContent","renderFoldersContent","Templates","Campaigns","Networks","Reports","Admin","Error","Navigation","appBarTitle","handleDrawerOpen","handleDrawerClose","navigateScreen","signOut","icons","secondaryIcons","CssBaseline_default","AppBar_default","position","appBar","appBarShift","disableGutters","menuButton","hide","Menu_default","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","ListItem_default","button","toLowerCase","ListItemIcon_default","ListItemText_default","contentShift","components","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","flexShrink","toolbar","flexGrow","withTheme","App","loading","authenticated","user","onAuthStateChanged","currentUser","path","exact","CircularProgress_default","react_router_dom","screens_Navigation","renderRoute","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cda5ce5.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCT4IE0kDuDZ3X9bHsvvU--xUO-hG93zU0\",\r\n    authDomain: \"pgkmedia-607c5.firebaseapp.com\",\r\n    databaseURL: \"https://pgkmedia-607c5.firebaseio.com\",\r\n    projectId: \"pgkmedia-607c5\",\r\n    storageBucket: \"pgkmedia-607c5.appspot.com\",\r\n    messagingSenderId: \"518306198801\"\r\n});\r\n\r\nexport default app;","import React, { Component } from \"react\";\r\nimport app from \"../../firebase/base\";\r\nimport Reaptcha from 'reaptcha';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 300,\r\n    backgroundColor: '#F4F4F4'\r\n  },\r\n  textField: {\r\n    marginTop: 10\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nclass SignIn extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.captcha = null;\r\n    this.state = {\r\n      isVerified: false,\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  onLoad = () => {\r\n    console.log('capcha successfully loaded');\r\n  };\r\n\r\n  onVerify = () => {\r\n    // Do something\r\n    this.setState({\r\n      isVerified: true\r\n    });\r\n  };\r\n\r\n  onExpire = () => {\r\n    // Do something\r\n    this.setState({\r\n      isVerified: false\r\n    });\r\n  };\r\n  \r\n\r\n  handleSignIn = async event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.isVerified) {\r\n      const { email, password } = this.state;\r\n      try {\r\n        await app\r\n          .auth()\r\n          .signInWithEmailAndPassword(email, password);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    } else {\r\n      alert('Please verify that you are a human!');\r\n    }\r\n    \r\n    \r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordhandleChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'  }}>\r\n        <Paper className={classes.root} elevation={1} >\r\n          <Typography variant=\"h5\" className={classes.title} >Login</Typography>\r\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSignIn}>\r\n            <TextField\r\n              fullWidth\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"standard-name\"\r\n              label=\"Username\"\r\n              type=\"email\"\r\n              className={classes.textField}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              id=\"standard-password-input\"\r\n              label=\"Password\"\r\n              className={classes.textField}\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.passwordhandleChange}\r\n              autoComplete=\"current-password\"\r\n              margin=\"dense\"\r\n            />\r\n\r\n            <div style={{ marginTop: 20 }} >\r\n              <Reaptcha sitekey=\"6Ld1gZ8UAAAAAAav2MZF1t6n77Lw4oDj3HqQYQuh\" onVerify={this.onVerify} onExpire={this.onExpire}/>\r\n            </div>\r\n            <div style={{ marginTop: 20 }} >\r\n              <Button variant=\"outlined\" type=\"submit\" disabled={!this.state.isVerified}>Log in</Button>\r\n              <Button style={{ marginLeft: 10 }} variant=\"outlined\" type=\"submit\" component={Link} to={'/digital-signage/register'}>Register</Button>\r\n            </div>\r\n\r\n            <Typography style={{ marginTop: 20 }} variant=\"caption\" className={classes.title} component={Link} to={'/digital-signage/forgotpassword'} >Forgot Password</Typography>\r\n            \r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignIn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport app from \"../../firebase/base\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: 300,\r\n    backgroundColor: '#F4F4F4'\r\n  },\r\n  textField: {\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nclass SignUp extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleSignUp = async event => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    try {\r\n      await app.auth().createUserWithEmailAndPassword(email, password);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  passwordhandleChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'  }}>\r\n        <Paper className={classes.root} elevation={1} >\r\n          <Typography variant=\"h5\" >Sign Up</Typography>\r\n          <form noValidate autoComplete=\"off\" onSubmit={this.handleSignUp}>\r\n            <TextField\r\n              fullWidth\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"standard-name\"\r\n              label=\"Username\"\r\n              className={classes.textField}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              type=\"email\"\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              id=\"standard-password-input\"\r\n              label=\"Password\"\r\n              className={classes.textField}\r\n              type=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.passwordhandleChange}\r\n              autoComplete=\"current-password\"\r\n              margin=\"dense\"\r\n            />\r\n\r\n            <Button style={{ marginTop: 20 }} variant=\"outlined\" type=\"submit\" >Sign Up</Button>\r\n            <Typography style={{ marginTop: 20 }} variant=\"caption\" className={classes.title} component={Link} to={'/digital-signage'} >Back to Login Page</Typography>\r\n          </form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignUp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport app from \"../../firebase/base\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      ...theme.mixins.gutters(),\r\n      paddingTop: theme.spacing.unit * 2,\r\n      paddingBottom: theme.spacing.unit * 2,\r\n      width: 300,\r\n      backgroundColor: '#F4F4F4'\r\n    },\r\n    textField: {\r\n      marginTop: 10\r\n    },\r\n    title: {\r\n      fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nclass ForgotPassword extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        redirect: false\r\n    }\r\n\r\n    handleForgotPassword = async event => {\r\n        event.preventDefault();\r\n\r\n        const { email } = this.state;\r\n        \r\n        try {\r\n            await app.auth().sendPasswordResetEmail(email).then(()=>{\r\n                this.setState({ redirect: true })\r\n            })\r\n            \r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ email: event.target.value });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n        const { redirect } = this.state;\r\n\r\n        if (redirect) {\r\n            return <Redirect to='/digital-signage'/>;\r\n        }\r\n\r\n        return (\r\n            <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'  }}>\r\n                <Paper className={classes.root} elevation={1} >\r\n                    <Typography variant=\"h5\" className={classes.title} >Forgot Password</Typography>\r\n                    <form onSubmit={this.handleForgotPassword}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"standard-name\"\r\n                            label=\"Email Address\"\r\n                            type=\"email\"\r\n                            className={classes.textField}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button style={{ marginTop:20 }} variant=\"outlined\" type=\"submit\" disabled={this.state.email === ''? true : false}>Send</Button>\r\n                        <Typography style={{ marginTop: 20 }} variant=\"caption\" className={classes.title} component={Link} to={'/digital-signage'} >Back to Login Page</Typography>\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(ForgotPassword);\r\n","import React, { Component } from 'react';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Dashboard</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Dashboard;","import React, { Component } from 'react';\r\n\r\nclass Stations extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Stations</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Stations;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ExpansionPanel = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0,0,0,.125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  expanded: {\r\n    margin: 'auto',\r\n  },\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0,0,0,.03)',\r\n    borderBottom: '1px solid rgba(0,0,0,.125)',\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(props => <MuiExpansionPanelSummary {...props} />);\r\n\r\nExpansionPanelSummary.muiName = 'ExpansionPanelSummary';\r\n\r\nconst ExpansionPanelDetails = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nclass CustomizedExpansionPanel extends React.Component {\r\n  state = {\r\n    expanded: 'panel0',\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { expanded } = this.state;\r\n    return (\r\n      <div>\r\n        {this.props.panel.map((panel, index) => {\r\n          return (\r\n            <ExpansionPanel\r\n              key={index}\r\n              square\r\n              expanded={expanded === 'panel' + index}\r\n              onChange={this.handleChange('panel' + index)}\r\n            >\r\n              <ExpansionPanelSummary>\r\n                <Typography>{panel.name}</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails style={{ padding: 0 }}>\r\n                {panel.content}\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          )\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizedExpansionPanel;","import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport firebase from \"firebase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { MovieRounded } from '@material-ui/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: #bdbdbd;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n`;\r\n\r\nconst getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#eeeeee';\r\n}\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box',\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden',\r\n  alignItems: 'center'\r\n};\r\n\r\nclass CustomizedDropzone extends Component {\r\n\r\n    state = {\r\n        isUploading: false,\r\n        uploadProgress: 0,\r\n        filenames: [],\r\n        downloadURLs: [],\r\n        files:[]\r\n    };\r\n    \r\n    handleUploadStart = () =>{\r\n        this.setState({\r\n            isUploading: true,\r\n            uploadProgress: 0,\r\n        })\r\n    };\r\n\r\n    handleUploadProgress = progress => {\r\n        this.setState({\r\n            uploadProgress: progress\r\n        })\r\n    }\r\n\r\n    handleUploadError = error => {\r\n        this.setState({\r\n            isUploading: false\r\n            // Todo: handle error\r\n        });\r\n        alert(error);\r\n    };\r\n\r\n    handleUploadSuccess = async filename => {\r\n        const downloadURL = await firebase\r\n            .storage()\r\n            .ref(\"media\")\r\n            .child(filename)\r\n            .getDownloadURL();\r\n\r\n        const file = await firebase\r\n            .storage()\r\n            .ref(\"media\")\r\n            .child(filename)\r\n\r\n        // Get metadata properties\r\n        file.getMetadata().then(function(metadata) {\r\n\r\n            var postData = {\r\n            name: metadata.name,\r\n            imageUrl: downloadURL,\r\n            size: metadata.size,\r\n            created: firebase.database.ServerValue.TIMESTAMP,\r\n            type: metadata.contentType,\r\n            fullPath: metadata.fullPath,\r\n            folder: 'default'\r\n            };\r\n\r\n            // Get a key for a new Post.\r\n            var newPostKey = firebase.database().ref().child('media').push().key;\r\n        \r\n            // Write the new post's data simultaneously in the posts list and the user's post list.\r\n            var updates = {};\r\n            updates['/media/' + newPostKey] = postData;\r\n        \r\n            firebase.database().ref().update(updates);\r\n\r\n        }).catch(function(error) {\r\n            // Uh-oh, an error occurred!\r\n        });\r\n\r\n        this.setState(oldState => ({\r\n            filenames: [...oldState.filenames, filename],\r\n            downloadURLs: [...oldState.downloadURLs, downloadURL],\r\n            uploadProgress: 100,\r\n            isUploading: false,\r\n            files:[]\r\n        }));\r\n\r\n    };\r\n\r\n    customOnChangeHandler = (event) => {\r\n        const { target: { files } } = event;\r\n        const filesToStore = [];\r\n        Array.from(files).forEach(file => filesToStore.push(file));\r\n        this.setState({ files: filesToStore })\r\n    }\r\n\r\n    startUploadManually = () => {\r\n        this.setState({ isUploading: true })\r\n        const { files } = this.state;\r\n        Array.from(files).forEach(file => {\r\n            this.fileUploader.startUpload(file)\r\n        });\r\n    }\r\n\r\n    onClearFileList = () => {\r\n        this.setState({files: []})\r\n    }\r\n\r\n    onDrop = (files) => {\r\n        this.setState({files})\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <div style={{ marginBottom: 20 }}>\r\n            <FileUploader\r\n                accept=\"image/png, image/jpeg, video/mp4\"\r\n                name=\"image-uploader-multiple\"\r\n                randomizeFilename\r\n                storageRef={firebase.storage().ref(\"media\")}\r\n                onUploadStart={this.handleUploadStart}\r\n                onUploadError={this.handleUploadError}\r\n                onUploadSuccess={this.handleUploadSuccess}\r\n                onProgress={this.handleUploadProgress}\r\n                onChange={this.customOnChangeHandler} // ⇐ Call your handler\r\n                ref={fileUploader => { this.fileUploader = fileUploader; } }  // ⇐ reference the component\r\n                multiple\r\n                hidden \r\n            />\r\n            <Dropzone disabled={this.state.isUploading} multiple onDrop={this.onDrop} accept=\"image/png, image/jpeg, video/mp4\" minSize={0} maxSize={20428800}>\r\n                {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, rejectedFiles}) => (\r\n                <div>\r\n                    <Container {...getRootProps({isDragActive, isDragAccept, isDragReject, rejectedFiles})}>\r\n                    <input {...getInputProps()} />\r\n                    {isDragActive ? \"Drop the files here\" : 'Drag and drop some files here, or click to select files'}\r\n                    </Container>\r\n                    <aside style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap',marginTop: 16 }}>\r\n                    {this.state.files.map(file => { \r\n                        if(file.type === 'video/mp4'){\r\n                        return(\r\n                        <div style={thumb} key={file.name}>\r\n                            <div style={thumbInner}>\r\n                            <MovieRounded style={{ fontSize: 50, color: \"#b4b4b4\" }}/>\r\n                            </div>\r\n                        </div>)\r\n                        } else {\r\n                        return(\r\n                        <div style={thumb} key={file.name}>\r\n                            <div style={thumbInner}>\r\n                            <img alt={file.name}\r\n                                src={URL.createObjectURL(file)}\r\n                                style={{ display: 'block', width: 'auto', height: '100%' }}\r\n                            />\r\n                            </div>\r\n                        </div>)\r\n                        }\r\n                    })}\r\n                    </aside>\r\n                    <div style={{ display: 'inline-flex' }}>\r\n                    <Button onClick={this.startUploadManually} disabled={(this.state.files.length > 0 && !this.state.isUploading)? false : true } variant=\"outlined\" color=\"primary\">\r\n                        Upload\r\n                    </Button>\r\n                    <Button onClick={this.onClearFileList} disabled={(this.state.files.length > 0 && !this.state.isUploading)? false : true } variant=\"outlined\" color=\"primary\" style={{ marginLeft:8 }}>\r\n                        Clear\r\n                    </Button>\r\n                    {rejectedFiles.length > 0 && (<div style={{ marginTop: 8, color:'#fa3b56', fontSize: 12, marginLeft: 8, alignItems: 'bottom' }}>{rejectedFiles.length} files has been rejected.</div>)}\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </Dropzone>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default CustomizedDropzone;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PreviewIcon from '@material-ui/icons/Visibility';\r\nimport { MovieRounded, SubdirectoryArrowLeft } from '@material-ui/icons'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport firebase from \"firebase\";\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes, onMoveAllClick, onDeleteAllClick, movefile } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            \r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Tooltip title=\"Move\">\r\n                <IconButton aria-label=\"Move\" onClick={onMoveAllClick}>\r\n                <SubdirectoryArrowLeft />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    dialogUrl: null,\r\n    dialogType: null,\r\n    dialogOption: '',\r\n    selectedFileName: ''\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.props.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes == 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onPreviewClick = (type, name, url) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: name,\r\n        dialogUrl: url,\r\n        dialogType: type,\r\n        dialogOption: 'preview'\r\n    });\r\n  }\r\n\r\n  onEditClick = (id, name) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Edit file\",\r\n        selectedId: id,\r\n        dialogOption: 'edit',\r\n        selectedFileName: name,\r\n        selectedFolder: 'default'\r\n    });\r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove file\",\r\n        selectedId: id,\r\n        dialogOption: 'delete'\r\n    });\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove file\",\r\n    });\r\n  }\r\n\r\n  onMoveAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'moveAll',\r\n        dialogTitle: \"Move file\",\r\n        selectedFolder: 'default'\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media/' + this.state.selectedId).update({ name: this.state.selectedFileName, folder: this.state.selectedFolder });\r\n\r\n    if(this.state.selectedFolder !== 'default'){\r\n        firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n        \r\n        return total + 1;\r\n        })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).once('value', snapshot => {\r\n      const item = snapshot.val();\r\n\r\n      firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove().then(() => {\r\n        \r\n        firebase.storage().ref().child(item.fullPath).delete()\r\n\r\n      })\r\n    })\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedId: '',\r\n        selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n    this.state.selected.forEach(items => {\r\n        firebase.database().ref(this.props.dataName).child(items).once('value', snapshot => {\r\n        const item = snapshot.val();\r\n\r\n        firebase.database().ref(this.props.dataName).child(items).remove().then(() => {\r\n            \r\n            firebase.storage().ref().child(item.fullPath).delete()\r\n\r\n        })\r\n        })\r\n    })\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleMoveAllFile = () => {\r\n    \r\n    if(this.state.selectedFolder !== 'default'){\r\n      this.state.selected.forEach(items => {\r\n        firebase.database().ref().child('/media/' + items).update({ folder: this.state.selectedFolder });\r\n  \r\n        firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n          \r\n          return total + 1;\r\n        })\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selected: []\r\n    });\r\n\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'preview'){\r\n        return(\r\n            <DialogContent>\r\n                { this.state.dialogType === 'video/mp4' ? <video style={{ width: '100%'}}  autoPlay src={this.state.dialogUrl} type=\"video/mp4\"></video> : <img style={{ width: '100%'}} src={this.state.dialogUrl} /> }\r\n            </DialogContent>\r\n        )\r\n    } \r\n\r\n    else if(this.state.dialogOption === 'edit'){\r\n        return(\r\n            <div>\r\n            <DialogContent>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"File Name\"\r\n                    fullWidth\r\n                    value={this.state.selectedFileName} \r\n                    onChange={this._handleEditFileNameChange}\r\n                />\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\" >\r\n                    <InputLabel\r\n                        ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                        }}\r\n                        htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                        Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={this.state.selectedFolder}\r\n                        onChange={this.handleSelectionChange}\r\n                        input={\r\n                        <OutlinedInput\r\n                            labelWidth={100}\r\n                            name=\"folder\"\r\n                            id=\"outlined-age-simple\"\r\n                        />\r\n                        }\r\n                    >\r\n                        \r\n                        <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                        </MenuItem>\r\n                        {this.props.folderCollection.map(n => {\r\n                            return(\r\n                                <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                            )\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleEditFile} color=\"primary\">\r\n                Submit\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"default\">\r\n                Cancel\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these file?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these file?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'moveAll'){\r\n        return(\r\n            <div>\r\n            <DialogContent style={{ width: 200}}>\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\">\r\n                    <InputLabel\r\n                    ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                    }}\r\n                    htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                    Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                    value={this.state.selectedFolder}\r\n                    onChange={this.handleSelectionChange}\r\n                    input={\r\n                        <OutlinedInput\r\n                        labelWidth={100}\r\n                        name=\"folder\"\r\n                        id=\"outlined-age-simple\"\r\n                        />\r\n                    }\r\n                    >\r\n                    \r\n                    <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                    </MenuItem>\r\n                    {this.props.folderCollection.map(n => {\r\n                        return(\r\n                        <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                        )\r\n                    })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleMoveAllFile} color=\"primary\">\r\n                Yes\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                No\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n      \r\n  }\r\n\r\n  render() {\r\n    const { classes, rows, data } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n          >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            {this.state.dialogTitle}\r\n          </DialogTitle>\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <EnhancedTableToolbar numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} onMoveAllClick={this.onMoveAllClick} movefile={this.props.movefile}/>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n              rows={rows}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n\r\n                      {rows.map(value => {\r\n\r\n                          if(value.thumbnail){\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">\r\n                                    {(n.type === 'video/mp4') ? <div style={{ height: 50}} ><MovieRounded style={{ fontSize: 50, color: \"#b4b4b4\" }}/></div> : <img style={{ height: 50}} src={n.imageUrl} alt=\"\"/>}\r\n                                </TableCell>\r\n                            )\r\n                          } \r\n                          \r\n                          else if(value.action)\r\n                          {\r\n                              if(this.props.preview)\r\n                              {\r\n                                return(\r\n                                    <TableCell align=\"left\" padding=\"none\" >\r\n                                        <div className={classes.actionButtons}>\r\n                                            <IconButton color=\"primary\" onClick={() => this.onPreviewClick(n.type, n.name, n.imageUrl) }>\r\n                                                <PreviewIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                                <EditIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                                <DeleteIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                )\r\n                              } else {\r\n                                return(\r\n                                    <TableCell align=\"left\" padding=\"none\" >\r\n                                        <div className={classes.actionButtons}>\r\n                                            <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                                <EditIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                                <DeleteIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                )\r\n                              }\r\n                            \r\n                          }\r\n\r\n                          else if(value.id === 'size')\r\n                          {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{this.bytesToSize(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n\r\n                          else if(value.id === 'created')\r\n                          {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                          else {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                      })}\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PreviewIcon from '@material-ui/icons/Visibility';\r\nimport { MovieRounded, SubdirectoryArrowLeft } from '@material-ui/icons'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport firebase from \"firebase\";\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes, onMoveAllClick, onDeleteAllClick, movefile } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            \r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Tooltip title=\"Move\">\r\n                <IconButton aria-label=\"Move\" onClick={onMoveAllClick}>\r\n                <SubdirectoryArrowLeft />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    dialogUrl: null,\r\n    dialogType: null,\r\n    dialogOption: '',\r\n    selectedFileName: '',\r\n    selectedFolder: this.props.selectedFolder\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.props.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes == 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onPreviewClick = (type, name, url) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: name,\r\n        dialogUrl: url,\r\n        dialogType: type,\r\n        dialogOption: 'preview'\r\n    });\r\n  }\r\n\r\n  onEditClick = (id, name) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Edit file\",\r\n        selectedId: id,\r\n        dialogOption: 'edit',\r\n        selectedFileName: name,\r\n        selectedFolder: this.props.selectedFolder\r\n    });\r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove file\",\r\n        selectedId: id,\r\n        dialogOption: 'delete'\r\n    });\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove file\",\r\n    });\r\n  }\r\n\r\n  onMoveAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'moveAll',\r\n        dialogTitle: \"Move file\",\r\n        selectedFolder: this.props.selectedFolder\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media/' + this.state.selectedId).update({ name: this.state.selectedFileName, folder: this.state.selectedFolder });\r\n\r\n    if(this.state.selectedFolder !== this.props.selectedFolder){\r\n\r\n      if(this.state.selectedFolder !== 'default'){\r\n          firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n          \r\n          return total + 1;\r\n          })\r\n      }\r\n\r\n      firebase.database().ref().child('/media_folder/' + this.props.selectedFolder).child('total').transaction( total => {\r\n        \r\n          return total - 1;\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: this.props.selectedFolder,\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).once('value', snapshot => {\r\n      const item = snapshot.val();\r\n\r\n      firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove().then(() => {\r\n        \r\n        firebase.storage().ref().child(item.fullPath).delete()\r\n\r\n      })\r\n    })\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedId: '',\r\n        selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n    this.state.selected.forEach(items => {\r\n        firebase.database().ref(this.props.dataName).child(items).once('value', snapshot => {\r\n        const item = snapshot.val();\r\n\r\n        firebase.database().ref(this.props.dataName).child(items).remove().then(() => {\r\n            \r\n            firebase.storage().ref().child(item.fullPath).delete()\r\n\r\n        })\r\n        })\r\n    })\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleMoveAllFile = () => {\r\n    \r\n    if(this.state.selectedFolder !== this.props.selectedFolder){\r\n      this.state.selected.forEach(items => {\r\n        firebase.database().ref().child('/media/' + items).update({ folder: this.state.selectedFolder });\r\n  \r\n        if(this.state.selectedFolder !== 'default'){\r\n          firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n            \r\n            return total + 1;\r\n          })\r\n        }\r\n\r\n        firebase.database().ref().child('/media_folder/' + this.props.selectedFolder).child('total').transaction( total => {\r\n          \r\n          return total - 1;\r\n        })\r\n        \r\n      })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selected: []\r\n    });\r\n\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'preview'){\r\n        return(\r\n            <DialogContent>\r\n                { this.state.dialogType === 'video/mp4' ? <video style={{ width: '100%'}}  autoPlay src={this.state.dialogUrl} type=\"video/mp4\"></video> : <img style={{ width: '100%'}} src={this.state.dialogUrl} /> }\r\n            </DialogContent>\r\n        )\r\n    } \r\n\r\n    else if(this.state.dialogOption === 'edit'){\r\n        return(\r\n            <div>\r\n            <DialogContent>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"File Name\"\r\n                    fullWidth\r\n                    value={this.state.selectedFileName} \r\n                    onChange={this._handleEditFileNameChange}\r\n                />\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\" >\r\n                    <InputLabel\r\n                        ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                        }}\r\n                        htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                        Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={this.state.selectedFolder}\r\n                        onChange={this.handleSelectionChange}\r\n                        input={\r\n                        <OutlinedInput\r\n                            labelWidth={100}\r\n                            name=\"folder\"\r\n                            id=\"outlined-age-simple\"\r\n                        />\r\n                        }\r\n                    >\r\n                        \r\n                        <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                        </MenuItem>\r\n                        {this.props.folderCollection.map(n => {\r\n                            return(\r\n                                <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                            )\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleEditFile} color=\"primary\">\r\n                Submit\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"default\">\r\n                Cancel\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these file?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these file?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'moveAll'){\r\n        return(\r\n            <div>\r\n            <DialogContent style={{ width: 200}}>\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\">\r\n                    <InputLabel\r\n                    ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                    }}\r\n                    htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                    Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                    value={this.state.selectedFolder}\r\n                    onChange={this.handleSelectionChange}\r\n                    input={\r\n                        <OutlinedInput\r\n                        labelWidth={100}\r\n                        name=\"folder\"\r\n                        id=\"outlined-age-simple\"\r\n                        />\r\n                    }\r\n                    >\r\n                    \r\n                    <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                    </MenuItem>\r\n                    {this.props.folderCollection.map(n => {\r\n                        return(\r\n                        <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                        )\r\n                    })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleMoveAllFile} color=\"primary\">\r\n                Yes\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                No\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n      \r\n  }\r\n\r\n  render() {\r\n    const { classes, rows, data } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n          >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            {this.state.dialogTitle}\r\n          </DialogTitle>\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <EnhancedTableToolbar numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} onMoveAllClick={this.onMoveAllClick} movefile={this.props.movefile}/>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n              rows={rows}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n\r\n                      {rows.map(value => {\r\n\r\n                          if(value.thumbnail){\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">\r\n                                    {(n.type === 'video/mp4') ? <div style={{ height: 50}} ><MovieRounded style={{ fontSize: 50, color: \"#b4b4b4\" }}/></div> : <img style={{ height: 50}} src={n.imageUrl} alt=\"\"/>}\r\n                                </TableCell>\r\n                            )\r\n                          } \r\n                          \r\n                          else if(value.action)\r\n                          {\r\n                              if(this.props.preview)\r\n                              {\r\n                                return(\r\n                                    <TableCell align=\"left\" padding=\"none\" >\r\n                                        <div className={classes.actionButtons}>\r\n                                            <IconButton color=\"primary\" onClick={() => this.onPreviewClick(n.type, n.name, n.imageUrl) }>\r\n                                                <PreviewIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                                <EditIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                                <DeleteIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                )\r\n                              } else {\r\n                                return(\r\n                                    <TableCell align=\"left\" padding=\"none\" >\r\n                                        <div className={classes.actionButtons}>\r\n                                            <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                                <EditIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                                <DeleteIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                )\r\n                              }\r\n                            \r\n                          }\r\n\r\n                          else if(value.id === 'size')\r\n                          {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{this.bytesToSize(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n\r\n                          else if(value.id === 'created')\r\n                          {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                          else {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                      })}\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport { MovieRounded, SubdirectoryArrowLeft, AddCircleOutline } from '@material-ui/icons'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport firebase from \"firebase\";\r\nimport CustomizedFolderData from \"./CustomizedFolderData\"\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, rows } = this.props;\r\n    \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false }\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  disableTouchListener={row.sortable ? false : true }\r\n                  disableFocusListener={row.sortable ? false : true }\r\n                  disableHoverListener={row.sortable ? false : true }\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={(orderBy === row.id && row.sortable) ? true : false }\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes, onMoveAllClick, onDeleteAllClick, movefile, onAddFolderClick } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            \r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          movefile ? <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Tooltip title=\"Move\">\r\n                <IconButton aria-label=\"Move\" onClick={onMoveAllClick}>\r\n                <SubdirectoryArrowLeft />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n            </div> : \r\n            <Tooltip title=\"Delete\">\r\n                <IconButton aria-label=\"Delete\" onClick={onDeleteAllClick}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        ) : (\r\n          <Tooltip title=\"Add Folder\">\r\n            <IconButton aria-label=\"Add Folder\" onClick={onAddFolderClick}>\r\n              <AddCircleOutline />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  actionButtons: {\r\n    display: 'flex'\r\n  }\r\n});\r\n\r\nclass EnhancedTable extends React.Component {\r\n\r\n  state = {\r\n    order: 'desc',\r\n    orderBy: this.props.orderBy,\r\n    selected: [],\r\n    selectedId: '',\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    openDialog: false,\r\n    dialogTitle: 'No Title',\r\n    folderId: '',\r\n    folderName: '',\r\n    dialogOption: '',\r\n    selectedFileName: '',\r\n    mediaData: [],\r\n    folderCollection: [],\r\n    addFolderName: ''\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState({ selected: this.props.data.map(n => n.id) })\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  bytesToSize = (bytes) => {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes == 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  };\r\n\r\n  onFolderClick = (id, name) => {\r\n\r\n    let ref = firebase.database().ref('media');\r\n\r\n    ref.on('value', snapshot => {\r\n      const mediaData = [];\r\n\r\n      snapshot.forEach(childSnapshot => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        \r\n        if(item.folder === id)\r\n        {\r\n          mediaData.push({ id:item.key, name: item.name, imageUrl: item.imageUrl, created: item.created, type: item.type, size: item.size, folder: item.folder });\r\n        }\r\n        \r\n      });\r\n\r\n      this.setState({ mediaData });\r\n    });\r\n\r\n    let folderRef = firebase.database().ref('media_folder');\r\n\r\n    folderRef.on('value', snapshot => {\r\n      const folderCollection = [];\r\n\r\n      snapshot.forEach(childSnapshot => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        \r\n        folderCollection.push({ id:item.key, name: item.name, created: item.created, total: item.total });\r\n        \r\n      });\r\n\r\n      this.setState({ folderCollection });\r\n    });\r\n\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: name,\r\n        folderId: id,\r\n        folderName: name,\r\n        dialogOption: 'folderSelect'\r\n    });\r\n  }\r\n\r\n  onAddFolderClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Add Folder\",\r\n        dialogOption: 'addFolder',\r\n        addFolderName: ''\r\n    });\r\n  }\r\n\r\n  onEditClick = (id, name) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Edit folder\",\r\n        selectedId: id,\r\n        dialogOption: 'edit',\r\n        selectedFileName: name,\r\n        selectedFolder: 'default'\r\n    });\r\n  }\r\n\r\n  onDeleteClick = (id) => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogTitle: \"Remove folder\",\r\n        selectedId: id,\r\n        dialogOption: 'delete'\r\n    });\r\n  }\r\n\r\n  onDeleteAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'deleteAll',\r\n        dialogTitle: \"Remove folder\",\r\n    });\r\n  }\r\n\r\n  onMoveAllClick = () => {\r\n    this.setState({\r\n        openDialog: true,\r\n        dialogOption: 'moveAll',\r\n        dialogTitle: \"Move file\",\r\n        selectedFolder: 'default'\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ openDialog: false });\r\n  };\r\n\r\n  _handleEditFileNameChange = e => {\r\n    this.setState({\r\n        selectedFileName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSelectionChange = event => {\r\n    this.setState({ selectedFolder: event.target.value });\r\n  };\r\n\r\n  handleEditFile = () => {\r\n    firebase.database().ref().child('/media_folder/' + this.state.selectedId).update({ name: this.state.selectedFileName });\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selectedFileName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  handleRemoveFile = () => {\r\n\r\n    let ref = firebase.database().ref('media');\r\n\r\n      ref.once('value', snapshot => {\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n          const item = childSnapshot.val();\r\n          \r\n          if(item.folder == this.state.selectedId){\r\n              \r\n              firebase.database().ref('media').child(childSnapshot.key).remove().then(() => {\r\n        \r\n                firebase.storage().ref().child(item.fullPath).delete().then(() => {\r\n                    \r\n                }) \r\n        \r\n              })\r\n          }\r\n          \r\n        });\r\n    });\r\n\r\n    firebase.database().ref(this.props.dataName).child(this.state.selectedId).remove()\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selectedId: '',\r\n      selected: []\r\n    });\r\n    \r\n  }\r\n\r\n  handleRemoveAllFile = () => {\r\n\r\n    this.state.selected.forEach(items => {\r\n\r\n      let ref = firebase.database().ref('media');\r\n\r\n      ref.once('value', snapshot => {\r\n\r\n        snapshot.forEach(childSnapshot => {\r\n            const item = childSnapshot.val();\r\n            \r\n            if(item.folder == items){\r\n                \r\n                firebase.database().ref('media').child(childSnapshot.key).remove().then(() => {\r\n            \r\n                    firebase.storage().ref().child(item.fullPath).delete().then(() => {\r\n                        \r\n                    }) \r\n            \r\n                })\r\n\r\n            }\r\n            \r\n            });\r\n        });\r\n\r\n        firebase.database().ref(this.props.dataName).child(items).remove()\r\n    })\r\n\r\n    this.setState({\r\n      openDialog: false,\r\n      selected: []\r\n    });\r\n  }\r\n\r\n  handleMoveAllFile = () => {\r\n    \r\n    if(this.state.selectedFolder !== 'default'){\r\n      this.state.selected.forEach(items => {\r\n        firebase.database().ref().child('/media/' + items).update({ folder: this.state.selectedFolder });\r\n  \r\n        firebase.database().ref().child('/media_folder/' + this.state.selectedFolder).child('total').transaction( total => {\r\n          \r\n          return total + 1;\r\n        })\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        selectedFolder: 'default',\r\n        selected: []\r\n    });\r\n\r\n  }\r\n\r\n  _handleFolderNameChange = e => {\r\n    this.setState({\r\n        addFolderName: e.target.value\r\n    });\r\n  }\r\n\r\n  handleAddFolder = async event => {\r\n\r\n    var postData = {\r\n        name: this.state.addFolderName,\r\n        created: firebase.database.ServerValue.TIMESTAMP,\r\n        total: 0\r\n    };\r\n\r\n    // Get a key for a new Post.\r\n    var newPostKey = firebase.database().ref().child('media_folder').push().key;\r\n\r\n    // Write the new post's data simultaneously in the posts list and the user's post list.\r\n    var updates = {};\r\n    updates['/media_folder/' + newPostKey] = postData;\r\n\r\n    firebase.database().ref().update(updates);\r\n\r\n    this.setState({\r\n        openDialog: false,\r\n        addFolderName: '',\r\n        selected: []\r\n    });\r\n  }\r\n\r\n  renderDialog = () => {\r\n\r\n    if(this.state.dialogOption === 'folderSelect'){\r\n        return(\r\n            <DialogContent>\r\n                <CustomizedFolderData \r\n                  rows={[\r\n                    { id: 'name', numeric: false, disablePadding: false, label: 'Name', sortable: true },\r\n                    { id: 'imageUrl', numeric: false, disablePadding: false, label: 'File Thumbnail', sortable: true, thumbnail: true },\r\n                    { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n                    { id: 'type', numeric: false, disablePadding: false, label: 'File Type', sortable: true },\r\n                    { id: 'size', numeric: false, disablePadding: false, label: 'File Size', sortable: true },\r\n                    { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n                  ]} \r\n                  data={this.state.mediaData}\r\n                  orderBy={'created'}\r\n                  folderCollection={this.state.folderCollection}\r\n                  preview={true}\r\n                  movefile={true}\r\n                  dataName='media'\r\n                  selectedFolder={this.state.folderId}/>\r\n            </DialogContent>\r\n        )\r\n    } \r\n\r\n    else if(this.state.dialogOption === 'edit'){\r\n        return(\r\n            <div>\r\n            <DialogContent>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"File Name\"\r\n                    fullWidth\r\n                    value={this.state.selectedFileName} \r\n                    onChange={this._handleEditFileNameChange}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleEditFile} color=\"primary\">\r\n                Submit\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"default\">\r\n                Cancel\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'delete'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these folder?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'deleteAll'){\r\n        return(\r\n            <div>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to permanently delete these folder?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleRemoveAllFile} color=\"default\">\r\n                    Yes\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleClose}>\r\n                    No\r\n                    </Button>\r\n                </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else if(this.state.dialogOption === 'moveAll'){\r\n        return(\r\n            <div>\r\n            <DialogContent style={{ width: 200}}>\r\n                <FormControl style={{ marginTop: 20 }} fullWidth variant=\"outlined\" noValidate autoComplete=\"off\">\r\n                    <InputLabel\r\n                    ref={ref => {\r\n                        this.InputLabelRef = ref;\r\n                    }}\r\n                    htmlFor=\"outlined-age-simple\"\r\n                    >\r\n                    Folder\r\n                    </InputLabel>\r\n                    <Select\r\n                    value={this.state.selectedFolder}\r\n                    onChange={this.handleSelectionChange}\r\n                    input={\r\n                        <OutlinedInput\r\n                        labelWidth={100}\r\n                        name=\"folder\"\r\n                        id=\"outlined-age-simple\"\r\n                        />\r\n                    }\r\n                    >\r\n                    \r\n                    <MenuItem value=\"default\">\r\n                        <em>Default</em>\r\n                    </MenuItem>\r\n                    {this.props.folderCollection.map(n => {\r\n                        return(\r\n                        <MenuItem key={n.id} value={n.id}>{n.name}</MenuItem>\r\n                        )\r\n                    })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={this.handleMoveAllFile} color=\"primary\">\r\n                Yes\r\n                </Button>\r\n                <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                No\r\n                </Button>\r\n            </DialogActions>\r\n            </div>\r\n        )\r\n    }\r\n      \r\n    else if(this.state.dialogOption === 'addFolder'){\r\n      return(\r\n        <div>\r\n          <DialogContent>\r\n            <FormControl fullWidth variant=\"outlined\" noValidate autoComplete=\"off\" onSubmit={this.handleAddFolder}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Folder Name\"\r\n                fullWidth\r\n                value={this.state.addFolderName} \r\n                onChange={this._handleFolderNameChange}\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleAddFolder} color=\"primary\">\r\n              Add\r\n            </Button>\r\n            <Button onClick={this.handleClose} color=\"default\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const { classes, rows, data } = this.props;\r\n    const { order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Dialog\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={this.state.openDialog}\r\n            maxWidth='xl'\r\n          >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            {this.state.dialogTitle}\r\n          </DialogTitle>\r\n          {this.renderDialog()}\r\n        </Dialog>\r\n        <EnhancedTableToolbar numSelected={selected.length} onDeleteAllClick={this.onDeleteAllClick} onMoveAllClick={this.onMoveAllClick} movefile={this.props.movefile} onAddFolderClick={this.onAddFolderClick}/>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n              rows={rows}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell onClick={event => this.handleClick(event, n.id)} padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n\r\n                      {rows.map(value => {\r\n\r\n                          if(value.thumbnail){\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">\r\n                                    {(n.type === 'video/mp4') ? <div style={{ height: 50}} ><MovieRounded style={{ fontSize: 50, color: \"#b4b4b4\" }}/></div> : <img style={{ height: 50}} src={n.imageUrl} alt=\"\"/>}\r\n                                </TableCell>\r\n                            )\r\n                          } \r\n                          \r\n                          else if(value.action)\r\n                          {\r\n                            return(\r\n                              <TableCell align=\"left\" padding=\"none\" >\r\n                                  <div className={classes.actionButtons}>\r\n                                      <IconButton color={n.total > 0 ? \"primary\" : \"default\"} disabled={n.total > 0 ? false : true} onClick={() => this.onFolderClick(n.id, n.name) }>\r\n                                          <FolderIcon fontSize=\"small\" />\r\n                                      </IconButton>\r\n                                      <IconButton onClick={() => this.onEditClick(n.id, n.name) }>\r\n                                          <EditIcon fontSize=\"small\" />\r\n                                      </IconButton>\r\n                                      <IconButton onClick={() => this.onDeleteClick(n.id) }>\r\n                                          <DeleteIcon fontSize=\"small\" />\r\n                                      </IconButton>\r\n                                  </div>\r\n                              </TableCell>\r\n                          )\r\n                            \r\n                          }\r\n\r\n                          else if(value.id === 'size')\r\n                          {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{this.bytesToSize(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n\r\n                          else if(value.id === 'created')\r\n                          {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(n[value.id])}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                          else {\r\n                            return(\r\n                                <TableCell onClick={event => this.handleClick(event, n.id)} align=\"left\" padding=\"default\">{n[value.id]}</TableCell>\r\n                              )\r\n                          }\r\n                          \r\n                      })}\r\n                     \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);","import React, { Component } from 'react';\r\nimport CustomizedExpansionPanel from '../components/CustomizedExpansionPanel'\r\nimport CustomizedDropzone from '../components/CustomizedDropzone'\r\nimport CustomizedTable from '../components/CustomizedTable'\r\nimport CustomizedFolderTable from '../components/CustomizedFolderTable'\r\nimport firebase from \"firebase\";\r\n\r\nclass Contents extends Component {\r\n\r\n  state = {\r\n    mediaData:[],\r\n    folderCollection:[]\r\n  }\r\n\r\n  componentWillMount(){\r\n    let ref = firebase.database().ref('media');\r\n\r\n    ref.on('value', snapshot => {\r\n      const mediaData = [];\r\n\r\n      snapshot.forEach(childSnapshot => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        \r\n        if(item.folder === 'default')\r\n        {\r\n          mediaData.push({ id:item.key, name: item.name, imageUrl: item.imageUrl, created: item.created, type: item.type, size: item.size, folder: item.folder });\r\n        }\r\n        \r\n      });\r\n\r\n      this.setState({ mediaData });\r\n    });\r\n\r\n    let folderRef = firebase.database().ref('media_folder');\r\n\r\n    folderRef.on('value', snapshot => {\r\n      const folderCollection = [];\r\n\r\n      snapshot.forEach(childSnapshot => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        \r\n        folderCollection.push({ id:item.key, name: item.name, created: item.created, total: item.total });\r\n        \r\n      });\r\n\r\n      this.setState({ folderCollection });\r\n    });\r\n  }\r\n\r\n  renderMediaContent(){\r\n    return <CustomizedTable \r\n      rows={[\r\n        { id: 'name', numeric: false, disablePadding: false, label: 'Name', sortable: true },\r\n        { id: 'imageUrl', numeric: false, disablePadding: false, label: 'File Thumbnail', sortable: true, thumbnail: true },\r\n        { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n        { id: 'type', numeric: false, disablePadding: false, label: 'File Type', sortable: true },\r\n        { id: 'size', numeric: false, disablePadding: false, label: 'File Size', sortable: true },\r\n        { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n      ]} \r\n      data={this.state.mediaData}\r\n      orderBy={'created'}\r\n      folderCollection={this.state.folderCollection}\r\n      preview={true}\r\n      movefile={true}\r\n      dataName='media'/>\r\n  }\r\n\r\n  renderFoldersContent(){\r\n    return <CustomizedFolderTable \r\n      rows={[\r\n        { id: 'name', numeric: false, disablePadding: false, label: 'Folder Name', sortable: true },\r\n        { id: 'total', numeric: false, disablePadding: false, label: 'Total Files', sortable: true },\r\n        { id: 'created', numeric: false, disablePadding: false, label: 'Created by', sortable: true },\r\n        { id: 'action', numeric: false, disablePadding: false, sortable: false, action: true },\r\n      ]} \r\n      data={this.state.folderCollection}\r\n      orderBy={'created'}\r\n      folderCollection={this.state.folderCollection}\r\n      movefile={false}\r\n      dataName='media_folder'/>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <CustomizedDropzone />\r\n          <CustomizedExpansionPanel panel={[{ name: 'Media', content: this.renderMediaContent() }, { name: 'Folders', content: this.renderFoldersContent() }]}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contents;","import React, { Component } from 'react';\r\n\r\nclass Templates extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Templates</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Templates;","import React, { Component } from 'react';\r\n\r\nclass Campaigns extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Campaigns</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Campaigns;","import React, { Component } from 'react';\r\n\r\nclass Networks extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Networks</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Networks;","import React, { Component } from 'react';\r\n\r\nclass Reports extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Reports</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Reports;","import React, { Component } from 'react';\r\n\r\nclass Admin extends Component {\r\n    render() {\r\n      return (\r\n          <div>\r\n            <h2>Admin</h2>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\nexport default Admin;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Error extends Component {\r\n    render() {\r\n      return <Redirect to='/digital-signage' />\r\n    }\r\n}\r\n  \r\nexport default Error;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from \"react-router-dom\";\r\nimport { DashboardRounded, TvRounded, PermMediaRounded, PictureInPictureRounded, WebRounded, CellWifiRounded, ListAltRounded, PersonRounded, SettingsRounded, ExitToAppRounded } from '@material-ui/icons';\r\nimport app from \"../firebase/base\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n});\r\n\r\nclass Navigation extends Component {\r\n\r\n  state = {\r\n    open: false,\r\n    appBarTitle:'Dashboard'\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  navigateScreen = (index) => {\r\n    if(index === 0){\r\n      \r\n    } else {\r\n      app.auth().signOut();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes, theme } = this.props;\r\n    const { open } = this.state;\r\n    const icons = [<DashboardRounded />, <TvRounded />, <PermMediaRounded/>, <PictureInPictureRounded/>, <WebRounded/>, <CellWifiRounded/>, <ListAltRounded/>, <PersonRounded/>]\r\n    const secondaryIcons = [<SettingsRounded/>, <ExitToAppRounded/>]\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              {this.state.appBarTitle}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n          {['Dashboard', 'Stations', 'Contents', 'Templates', 'Campaigns', 'Networks', 'Reports', 'Admin'].map((text, index) => (\r\n              <ListItem button component={Link} to={text === 'Dashboard' ? '/digital-signage' : '/digital-signage/' + text.toLowerCase()} key={text} onClick={()=> this.setState({ open: false, appBarTitle: text })}>\r\n                <ListItemIcon>{icons[index]}</ListItemIcon>\r\n                <ListItemText primary={<Typography style={{ fontWeight:'500', color: '#4d4c4c' }}>{text}</Typography>} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['Settings', 'Log Out'].map((text, index) => (\r\n              <ListItem button key={text} onClick={()=> this.navigateScreen(index) }>\r\n                <ListItemIcon>{secondaryIcons[index]}</ListItemIcon>\r\n                <ListItemText primary={<Typography style={{ fontWeight:'500',color: '#4d4c4c' }}>{text}</Typography>} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          {this.props.components}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Navigation);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//authentication\r\nimport SignIn from \"./screens/authentication/SignIn\";\r\nimport SignUp from \"./screens/authentication/SignUp\";\r\nimport ForgotPassword from \"./screens/authentication/ForgotPassword\";\r\nimport app from \"./firebase/base\";\r\n\r\n//screens\r\nimport Dashboard from \"./screens/Dashboard\";\r\nimport Stations from \"./screens/Stations\";\r\nimport Contents from \"./screens/Contents\";\r\nimport Templates from \"./screens/Templates\";\r\nimport Campaigns from \"./screens/Campaigns\";\r\nimport Networks from \"./screens/Networks\";\r\nimport Reports from \"./screens/Reports\";\r\nimport Admin from \"./screens/Admin\";\r\nimport Error from \"./screens/Error\";\r\nimport Navigation from \"./screens/Navigation\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    loading: true, authenticated: false, user: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    app.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.setState({\r\n          authenticated: true,\r\n          currentUser: user,\r\n          loading: false\r\n        });\r\n      } else {\r\n        this.setState({\r\n          authenticated: false,\r\n          currentUser: null,\r\n          loading: false\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  renderRoute(){\r\n    return(\r\n      <Switch>\r\n        <Route path=\"/digital-signage\" component={Dashboard} exact />\r\n        <Route path=\"/digital-signage/stations\" component={Stations} />\r\n        <Route path=\"/digital-signage/contents\" component={Contents} />\r\n        <Route path=\"/digital-signage/templates\" component={Templates} />\r\n        <Route path=\"/digital-signage/campaigns\" component={Campaigns} />\r\n        <Route path=\"/digital-signage/networks\" component={Networks} />\r\n        <Route path=\"/digital-signage/reports\" component={Reports} />\r\n        <Route path=\"/digital-signage/admin\" component={Admin} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const { authenticated, loading } = this.state;\r\n\r\n    if (loading) {\r\n      return <div style={{ display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'  }}><CircularProgress color=\"primary\" /></div>;\r\n    }\r\n\r\n    if(authenticated)\r\n    {\r\n      return (\r\n        <BrowserRouter>\r\n          <div>\r\n            <Navigation components={this.renderRoute()}/>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    } else {\r\n      return (\r\n        <BrowserRouter>\r\n          <div>\r\n            <Switch>\r\n              <Route path=\"/digital-signage\" component={SignIn} exact/>\r\n              <Route path=\"/digital-signage/register\" component={SignUp} />\r\n              <Route path=\"/digital-signage/forgotpassword\" component={ForgotPassword} />\r\n              <Route component={Error} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}